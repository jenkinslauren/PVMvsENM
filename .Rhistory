'Fraxinus profunda', 'Fraxinus quadrangulata')
# set constants
climYears <- seq(21000, 0, by = -1000)
studyRegionFileName <- './regions/study_region_daltonIceMask_lakesMasked_linearIceSheetInterpolation.tif'
studyRegionRasts <- brick(studyRegionFileName)
fileName <- list.files(path = paste0('./predictions/', gcm),
pattern = paste0('PC', pc,'.tif'),
full.names = T)
tmp <- list(brick(fileName[[1]]), brick(fileName[[2]]), brick(fileName[[3]]),
brick(fileName[[4]]), brick(fileName[[5]]), brick(fileName[[6]]),
brick(fileName[[7]]), brick(fileName[[8]]))
skip <- 1
means <- maxes <- list()
for (j in 1:length(tmp)){
meansSkipList <- list()
maxSkipList <- list()
for(k in 1:length(climYears)) {
nList <- list()
for(m in 1:length(tmp)) {
if(skip != m) { # species to include
# print(names(tmp[[m]][[k]]))
thisRast <- raster::resample(brick(tmp[[m]][[k]]), pollenRast[[i]], method = 'bilinear')
nList <- append(nList, brick(thisRast))
} else { # species to remove
skipped <- speciesList[m]
}
climYear <- climYears[k]
n <- stack(nList)
mnSkip <- raster::mosaic(n[[1]], n[[2]], n[[3]], n[[4]], n[[5]], n[[6]],
n[[7]], fun = mean)
names(mnSkip) <- paste0(climYear, ' ybp, Species skipped = ', skipped)
meansSkipList <- append(meansSkipList, mnSkip)
mxSkip <- raster::mosaic(n[[1]], n[[2]], n[[3]], n[[4]], n[[5]], n[[6]],
n[[7]], fun = max)
names(mxSkip) <- paste0(climYear, ' ybp, Species skipped = ', skipped)
maxSkipList <- append(maxSkipList, mxSkip)
}
means <- append(means, stack(meansSkipList))
maxes <- append(maxes, stack(maxSkipList))
# title <- paste0('Species skipped = ', skipped, ', GCM = ', gcm)
# sp <- paste0(substr(skipped,1,4), toupper(substr(skipped,10,10)),
#              substr(skipped,11,13))
# pdf(file = './PDF/predictions_removedSp.pdf', width = 11, height = 8.5)
# for (i in 1:length(meansSkipList)) {
#   par(mfrow=c(1,2))
#   plot(meansSkipList[[i]], main = paste0('MEANS, ', names(meansSkipList[[i]])),
#        sub = title, col = colors, axes = F)
#   plot(meansList[[i]], main = paste0('MEANS without sp removed, ', names(meansList[[i]])),
#        col = colors, axes = F)
# }
# dev.off()
#
# pdf(file = paste0('./predictions/pdf/', gcm, '/No_', sp, '_maxList.pdf'), width = 11, height = 8.5)
# for (i in 1:length(maxSkipList)) {
#   par(mfrow=c(1,2))
#   plot(maxSkipList[[i]], main = paste0('MAX, ', names(maxSkipList[[i]])),
#        sub = title, col = colors, axes = F)
#   plot(maxList[[i]], main = paste0('MAX without sp removed, ', names(maxList[[i]])),
#        col = colors, axes = F)
# }
# dev.off()
skip <- skip + 1
}
plot(means[[1]][[1]])
means
plot(means[[1]])
tmp <- list(brick(fileName[[1]]), brick(fileName[[2]]), brick(fileName[[3]]),
brick(fileName[[4]]), brick(fileName[[5]]), brick(fileName[[6]]),
brick(fileName[[7]]), brick(fileName[[8]]))
skip <- 1
means <- maxes <- list()
plot(tmp)
plot(tmp[[1]])
meansSkipList <- list()
maxSkipList <- list()
nList <- list()
m <- 1
k <- 1
i <- 1
length(tmp)
length(pollenRast)
nlayers(pollenRast)
# print(names(tmp[[m]][[k]]))
thisRast <- raster::resample(brick(tmp[[m]][[k]]), pollenRast[[k]], method = 'bilinear')
plot(thisRast)
# print(names(tmp[[m]][[k]]))
thisRast <- raster::resample(tmp[[m]][[k]], pollenRast[[k]], method = 'bilinear')
plot(thisRast)
dev.off()
plot(tmp[[m]][[k]])
plot(pollenRast[[k]])
# print(names(tmp[[m]][[k]]))
thisRast <- raster::resample(tmp[[m]][[k]], pollenRast[[k]], method = 'bilinear')
plot(thisRast)
# print(names(tmp[[m]][[k]]))
tmp[[m]][[k]] <- raster::projectRaster(tmp[[m]][[k]], pollenRast[[i]])
# print(names(tmp[[m]][[k]]))
tmp[[m]][[k]] <- raster::projectRaster(tmp[[m]][[k]], pollenRast[[k]])
pollenRast <- brick('/Volumes/lj_mac_22/pollen/predictions-FRAXINUS_meanpred.tif')
# print(names(tmp[[m]][[k]]))
tmp[[m]][[k]] <- raster::projectRaster(tmp[[m]][[k]], pollenRast[[k]])
extent(tmp[[m]][[k]])
extent(pollenRast[[k]])
# print(names(tmp[[m]][[k]]))
extent(pollenRast[[k]]) <- extent(tmp[[m]][[k]])
# print(names(tmp[[m]][[k]]))
sp::spTransform(pollenRast[[k]], CRS(projection(tmp[[m]][[k]])))
# print(names(tmp[[m]][[k]]))
pollenRast <- sp::spTransform(pollenRast, CRS(projection(tmp[[m]][[k]])))
CRS(projection(tmp[[m]][[k]]))
# print(names(tmp[[m]][[k]]))
tmp[[m]][[k]] <- sp::spTransform(tmp[[m]][[k]], CRS(projection(pollenRast)))
tmp[[m]][[k]]
pollenRast[[k]]
# print(names(tmp[[m]][[k]]))
projection(pollenRast) <- projection(tmp[[m]][[k]])
tmp[[m]][[k]] <- raster::projectRaster(tmp[[m]][[k]], pollenRast[[k]])
thisRast <- raster::resample(tmp[[m]][[k]], pollenRast[[k]], method = 'bilinear')
plot(thisRast)
pollenRast <- sp::spTransform(pollenRast, CRS(projection(tmp[[m]][[k]])))
pollenRast <- sp::spTransform(pollenRast, getCRS(tmp[[m]][[k]]))
pollenRast[[k]] <- raster::projectRaster(pollenRast[[k]], tmp[[m]][[k]])
extent(pollenRast[[k]]) <- extent(tmp[[m]][[k]])
# print(names(tmp[[m]][[k]]))
# thisRast <- raster::resample(tmp[[m]][[k]], pollenRast[[k]], method = 'bilinear')
thisRast <- tmp[[m]][[k]]
nList <- append(nList, brick(thisRast))
plot(thisRast)
fileName <- list.files(path = paste0('./predictions/', gcm),
pattern = paste0('PC', pc,'.tif'),
full.names = T)
pollenRast <- brick('/Volumes/lj_mac_22/pollen/predictions-FRAXINUS_meanpred.tif')
tmp <- list(brick(fileName[[1]]), brick(fileName[[2]]), brick(fileName[[3]]),
brick(fileName[[4]]), brick(fileName[[5]]), brick(fileName[[6]]),
brick(fileName[[7]]), brick(fileName[[8]]))
skip <- 1
means <- maxes <- list()
for (j in 1:length(tmp)){
meansSkipList <- list()
maxSkipList <- list()
for(k in 1:length(climYears)) {
nList <- list()
for(m in 1:length(tmp)) {
if(skip != m) { # species to include
# print(names(tmp[[m]][[k]]))
# thisRast <- raster::resample(tmp[[m]][[k]], pollenRast[[k]], method = 'bilinear')
thisRast <- tmp[[m]][[k]]
nList <- append(nList, brick(thisRast))
} else { # species to remove
skipped <- speciesList[m]
}
climYear <- climYears[k]
n <- stack(nList)
mnSkip <- raster::mosaic(n[[1]], n[[2]], n[[3]], n[[4]], n[[5]], n[[6]],
n[[7]], fun = mean)
names(mnSkip) <- paste0(climYear, ' ybp, Species skipped = ', skipped)
meansSkipList <- append(meansSkipList, mnSkip)
mxSkip <- raster::mosaic(n[[1]], n[[2]], n[[3]], n[[4]], n[[5]], n[[6]],
n[[7]], fun = max)
names(mxSkip) <- paste0(climYear, ' ybp, Species skipped = ', skipped)
maxSkipList <- append(maxSkipList, mxSkip)
}
means <- append(means, stack(meansSkipList))
maxes <- append(maxes, stack(maxSkipList))
# title <- paste0('Species skipped = ', skipped, ', GCM = ', gcm)
# sp <- paste0(substr(skipped,1,4), toupper(substr(skipped,10,10)),
#              substr(skipped,11,13))
# pdf(file = './PDF/predictions_removedSp.pdf', width = 11, height = 8.5)
# for (i in 1:length(meansSkipList)) {
#   par(mfrow=c(1,2))
#   plot(meansSkipList[[i]], main = paste0('MEANS, ', names(meansSkipList[[i]])),
#        sub = title, col = colors, axes = F)
#   plot(meansList[[i]], main = paste0('MEANS without sp removed, ', names(meansList[[i]])),
#        col = colors, axes = F)
# }
# dev.off()
#
# pdf(file = paste0('./predictions/pdf/', gcm, '/No_', sp, '_maxList.pdf'), width = 11, height = 8.5)
# for (i in 1:length(maxSkipList)) {
#   par(mfrow=c(1,2))
#   plot(maxSkipList[[i]], main = paste0('MAX, ', names(maxSkipList[[i]])),
#        sub = title, col = colors, axes = F)
#   plot(maxList[[i]], main = paste0('MAX without sp removed, ', names(maxList[[i]])),
#        col = colors, axes = F)
# }
# dev.off()
skip <- skip + 1
}
title <- paste0('Fraxinus, \nGCM = ', gcm)
pdf(file = paste0('./PDF/', gcm, '_predictions_removedSp_mean.pdf'), width = 11, height = 8.5)
for (i in 1:22) {
par(mfrow=c(3,3), mar=c(2,1,5,1)+0.1)
plot(meansList[[i]], main = paste0(sub('\\.', ' ',
gsub('\\X*', '', names(meansList[[i]]))), '\nMEANS, ', title),
col = colors, axes = F, legend.mar = 10, box = F)
for(j in 1:8) {
t <- gsub('\\.', ' ', gsub('X', '', names(means[[j]][[i]])))
plot(means[[j]][[i]], main = paste0(sub('skipped ', 'skipped =\n', sub('ybp ', 'ybp\n', t))),
col = colors, axes = F, legend.mar = 10, box = F)
}
dev.off()
pdf(file = paste0('./PDF/', gcm, '_predictions_removedSp_max.pdf'), width = 11, height = 8.5)
for (i in 1:22) {
par(mfrow=c(3,3), mar=c(2,1,5,1)+0.1)
plot(maxList[[i]], main = paste0(sub('\\.', ' ',
gsub('\\X*', '', names(maxList[[i]]))), '\nMAX, ', title),
col = colors, axes = F, legend.mar = 10, box = F)
for(j in 1:8) {
t <- gsub('\\.', ' ', gsub('X', '', names(maxes[[j]][[i]])))
plot(maxes[[j]][[i]], main = paste0(sub('skipped ', 'skipped =\n', sub('ybp ', 'ybp\n', t))),
col = colors, axes = F, legend.mar = 10, box = F)
}
dev.off()
rm(list = ls())
library(dplyr)
library(ggplot2)
library(tidyr)
library(stringr)
library(raster)
library(rgdal)
library(enmSdm)
library(terra)
library(maxnet)
library(sf)
library(maps)
library(rnaturalearth)
library(rnaturalearthdata)
library(rnaturalearthhires)
setwd('/Volumes/lj_mac_22/MOBOT/PVMvsENM')
# constants
gcm <- 'ecbilt'
pc <- 5
load(paste0('./workspaces/06 - ', gcm, ' Projections'))
speciesList <- c('Fraxinus americana','Fraxinus caroliniana', 'Fraxinus cuspidata',
'Fraxinus greggii', 'Fraxinus nigra', 'Fraxinus pennsylvanica',
'Fraxinus profunda', 'Fraxinus quadrangulata')
# set constants
climYears <- seq(21000, 0, by = -1000)
studyRegionFileName <- './regions/study_region_daltonIceMask_lakesMasked_linearIceSheetInterpolation.tif'
studyRegionRasts <- brick(studyRegionFileName)
fileName <- list.files(path = paste0('./predictions/', gcm),
pattern = paste0('PC', pc,'.tif'),
full.names = T)
pollenRast <- brick('/Volumes/lj_mac_22/pollen/predictions-FRAXINUS_meanpred.tif')
tmp <- list(brick(fileName[[1]]), brick(fileName[[2]]), brick(fileName[[3]]),
brick(fileName[[4]]), brick(fileName[[5]]), brick(fileName[[6]]),
brick(fileName[[7]]), brick(fileName[[8]]))
skip <- 1
means <- maxes <- list()
for (j in 1:length(tmp)){
meansSkipList <- list()
maxSkipList <- list()
for(k in 1:length(climYears)) {
nList <- list()
for(m in 1:length(tmp)) {
if(skip != m) { # species to include
# print(names(tmp[[m]][[k]]))
# thisRast <- raster::resample(tmp[[m]][[k]], pollenRast[[k]], method = 'bilinear')
thisRast <- tmp[[m]][[k]]
nList <- append(nList, brick(thisRast))
} else { # species to remove
skipped <- speciesList[m]
}
climYear <- climYears[k]
n <- stack(nList)
mnSkip <- raster::mosaic(n[[1]], n[[2]], n[[3]], n[[4]], n[[5]], n[[6]],
n[[7]], fun = mean)
names(mnSkip) <- paste0(climYear, ' ybp, Species skipped = ', skipped)
meansSkipList <- append(meansSkipList, mnSkip)
mxSkip <- raster::mosaic(n[[1]], n[[2]], n[[3]], n[[4]], n[[5]], n[[6]],
n[[7]], fun = max)
names(mxSkip) <- paste0(climYear, ' ybp, Species skipped = ', skipped)
maxSkipList <- append(maxSkipList, mxSkip)
}
means <- append(means, stack(meansSkipList))
maxes <- append(maxes, stack(maxSkipList))
# title <- paste0('Species skipped = ', skipped, ', GCM = ', gcm)
# sp <- paste0(substr(skipped,1,4), toupper(substr(skipped,10,10)),
#              substr(skipped,11,13))
# pdf(file = './PDF/predictions_removedSp.pdf', width = 11, height = 8.5)
# for (i in 1:length(meansSkipList)) {
#   par(mfrow=c(1,2))
#   plot(meansSkipList[[i]], main = paste0('MEANS, ', names(meansSkipList[[i]])),
#        sub = title, col = colors, axes = F)
#   plot(meansList[[i]], main = paste0('MEANS without sp removed, ', names(meansList[[i]])),
#        col = colors, axes = F)
# }
# dev.off()
#
# pdf(file = paste0('./predictions/pdf/', gcm, '/No_', sp, '_maxList.pdf'), width = 11, height = 8.5)
# for (i in 1:length(maxSkipList)) {
#   par(mfrow=c(1,2))
#   plot(maxSkipList[[i]], main = paste0('MAX, ', names(maxSkipList[[i]])),
#        sub = title, col = colors, axes = F)
#   plot(maxList[[i]], main = paste0('MAX without sp removed, ', names(maxList[[i]])),
#        col = colors, axes = F)
# }
# dev.off()
skip <- skip + 1
}
title <- paste0('Fraxinus, \nGCM = ', gcm)
pdf(file = paste0('./PDF/', gcm, '_predictions_removedSp_mean.pdf'), width = 11, height = 8.5)
for (i in 1:22) {
par(mfrow=c(3,3), mar=c(2,1,5,1)+0.1)
plot(meansList[[i]], main = paste0(sub('\\.', ' ',
gsub('\\X*', '', names(meansList[[i]]))), '\nMEANS, ', title),
col = colors, axes = F, legend.mar = 10, box = F)
for(j in 1:8) {
t <- gsub('\\.', ' ', gsub('X', '', names(means[[j]][[i]])))
plot(means[[j]][[i]], main = paste0(sub('skipped ', 'skipped =\n', sub('ybp ', 'ybp\n', t))),
col = colors, axes = F, legend.mar = 10, box = F)
}
dev.off()
pdf(file = paste0('./PDF/', gcm, '_predictions_removedSp_max.pdf'), width = 11, height = 8.5)
for (i in 1:22) {
par(mfrow=c(3,3), mar=c(2,1,5,1)+0.1)
plot(maxList[[i]], main = paste0(sub('\\.', ' ',
gsub('\\X*', '', names(maxList[[i]]))), '\nMAX, ', title),
col = colors, axes = F, legend.mar = 10, box = F)
for(j in 1:8) {
t <- gsub('\\.', ' ', gsub('X', '', names(maxes[[j]][[i]])))
plot(maxes[[j]][[i]], main = paste0(sub('skipped ', 'skipped =\n', sub('ybp ', 'ybp\n', t))),
col = colors, axes = F, legend.mar = 10, box = F)
}
dev.off()
rm(list = ls())
library(dplyr)
library(ggplot2)
library(tidyr)
library(stringr)
library(raster)
library(rgdal)
library(enmSdm)
library(terra)
library(maxnet)
library(sf)
library(maps)
library(rnaturalearth)
library(rnaturalearthdata)
library(rnaturalearthhires)
setwd('/Volumes/lj_mac_22/MOBOT/PVMvsENM')
# constants
gcm <- 'Beyer'
pc <- 5
load(paste0('./workspaces/06 - ', gcm, ' Projections'))
speciesList <- c('Fraxinus americana','Fraxinus caroliniana', 'Fraxinus cuspidata',
'Fraxinus greggii', 'Fraxinus nigra', 'Fraxinus pennsylvanica',
'Fraxinus profunda', 'Fraxinus quadrangulata')
# set constants
climYears <- seq(21000, 0, by = -1000)
studyRegionFileName <- './regions/study_region_daltonIceMask_lakesMasked_linearIceSheetInterpolation.tif'
studyRegionRasts <- brick(studyRegionFileName)
fileName <- list.files(path = paste0('./predictions/', gcm),
pattern = paste0('PC', pc,'.tif'),
full.names = T)
pollenRast <- brick('/Volumes/lj_mac_22/pollen/predictions-FRAXINUS_meanpred.tif')
tmp <- list(brick(fileName[[1]]), brick(fileName[[2]]), brick(fileName[[3]]),
brick(fileName[[4]]), brick(fileName[[5]]), brick(fileName[[6]]),
brick(fileName[[7]]), brick(fileName[[8]]))
skip <- 1
means <- maxes <- list()
for (j in 1:length(tmp)){
meansSkipList <- list()
maxSkipList <- list()
for(k in 1:length(climYears)) {
nList <- list()
for(m in 1:length(tmp)) {
if(skip != m) { # species to include
# print(names(tmp[[m]][[k]]))
# thisRast <- raster::resample(tmp[[m]][[k]], pollenRast[[k]], method = 'bilinear')
thisRast <- tmp[[m]][[k]]
nList <- append(nList, brick(thisRast))
} else { # species to remove
skipped <- speciesList[m]
}
climYear <- climYears[k]
n <- stack(nList)
mnSkip <- raster::mosaic(n[[1]], n[[2]], n[[3]], n[[4]], n[[5]], n[[6]],
n[[7]], fun = mean)
names(mnSkip) <- paste0(climYear, ' ybp, Species skipped = ', skipped)
meansSkipList <- append(meansSkipList, mnSkip)
mxSkip <- raster::mosaic(n[[1]], n[[2]], n[[3]], n[[4]], n[[5]], n[[6]],
n[[7]], fun = max)
names(mxSkip) <- paste0(climYear, ' ybp, Species skipped = ', skipped)
maxSkipList <- append(maxSkipList, mxSkip)
}
means <- append(means, stack(meansSkipList))
maxes <- append(maxes, stack(maxSkipList))
# title <- paste0('Species skipped = ', skipped, ', GCM = ', gcm)
# sp <- paste0(substr(skipped,1,4), toupper(substr(skipped,10,10)),
#              substr(skipped,11,13))
# pdf(file = './PDF/predictions_removedSp.pdf', width = 11, height = 8.5)
# for (i in 1:length(meansSkipList)) {
#   par(mfrow=c(1,2))
#   plot(meansSkipList[[i]], main = paste0('MEANS, ', names(meansSkipList[[i]])),
#        sub = title, col = colors, axes = F)
#   plot(meansList[[i]], main = paste0('MEANS without sp removed, ', names(meansList[[i]])),
#        col = colors, axes = F)
# }
# dev.off()
#
# pdf(file = paste0('./predictions/pdf/', gcm, '/No_', sp, '_maxList.pdf'), width = 11, height = 8.5)
# for (i in 1:length(maxSkipList)) {
#   par(mfrow=c(1,2))
#   plot(maxSkipList[[i]], main = paste0('MAX, ', names(maxSkipList[[i]])),
#        sub = title, col = colors, axes = F)
#   plot(maxList[[i]], main = paste0('MAX without sp removed, ', names(maxList[[i]])),
#        col = colors, axes = F)
# }
# dev.off()
skip <- skip + 1
}
title <- paste0('Fraxinus, \nGCM = ', gcm)
pdf(file = paste0('./PDF/', gcm, '_predictions_removedSp_mean.pdf'), width = 11, height = 8.5)
for (i in 1:22) {
par(mfrow=c(3,3), mar=c(2,1,5,1)+0.1)
plot(meansList[[i]], main = paste0(sub('\\.', ' ',
gsub('\\X*', '', names(meansList[[i]]))), '\nMEANS, ', title),
col = colors, axes = F, legend.mar = 10, box = F)
for(j in 1:8) {
t <- gsub('\\.', ' ', gsub('X', '', names(means[[j]][[i]])))
plot(means[[j]][[i]], main = paste0(sub('skipped ', 'skipped =\n', sub('ybp ', 'ybp\n', t))),
col = colors, axes = F, legend.mar = 10, box = F)
}
dev.off()
pdf(file = paste0('./PDF/', gcm, '_predictions_removedSp_max.pdf'), width = 11, height = 8.5)
for (i in 1:22) {
par(mfrow=c(3,3), mar=c(2,1,5,1)+0.1)
plot(maxList[[i]], main = paste0(sub('\\.', ' ',
gsub('\\X*', '', names(maxList[[i]]))), '\nMAX, ', title),
col = colors, axes = F, legend.mar = 10, box = F)
for(j in 1:8) {
t <- gsub('\\.', ' ', gsub('X', '', names(maxes[[j]][[i]])))
plot(maxes[[j]][[i]], main = paste0(sub('skipped ', 'skipped =\n', sub('ybp ', 'ybp\n', t))),
col = colors, axes = F, legend.mar = 10, box = F)
}
dev.off()
rm(list = ls())
library(spatialEco)
library(enmSdm)
library(stats)
setwd('/Volumes/lj_mac_22/MOBOT/PVMvsENM')
gcmList_ <- c('Lorenz_ccsm', 'ecbilt', 'Beyer')
pc <- 5
# set constants
climYears <- seq(21000, 0, by=-1000)
studyRegionFileName <- './regions/study_region_daltonIceMask_lakesMasked_linearIceSheetInterpolation.tif'
studyRegionRasts <- brick(studyRegionFileName)
world <- ne_countries(scale = "medium", returnclass = "sf")
world <- as(world, "Spatial")
pollenRast <- brick('/Volumes/lj_mac_22/pollen/predictions-FRAXINUS_meanpred.tif')
colors <- c('#a50026','#d73027','#f46d43','#fdae61','#fee08b','#ffffbf',
'#d9ef8b','#a6d96a','#66bd63','#1a9850','#006837')
pdf(file = './PDF/rank_correlation.pdf', width = 11, height = 8.5)
par(mfrow = c(1,3), mar = c(2,1,5,1)+0.1)
for(a in 1:22) {
for(gcm in gcmList_) {
load(paste0('./workspaces/06 - ', gcm, ' Projections'))
if(gcm == 'Lorenz_ccsm') g <- 'CCSM'
if(gcm == 'ecbilt') g <- 'ECBilt'
if(gcm == 'Beyer') g <- 'HadAM3H'
t <- paste0('Pearson Correlation,\nPollen & ', g, '\n', climYears[a], ' ybp')
thisRast <- raster::resample(meansList[[a]], pollenRast[[a]], method = 'bilinear')
cor <- rasterCorrelation(thisRast, pollenRast[[a]], type = 'pearson')
plot(cor, main = t, axes = F, box = F, legend.mar = 10)
plot(raster::crop(sp::spTransform(world, CRS(projection(cor))), extent(cor)),
border = 'black', col = colors, add = T)
}
dev.off()
pdf(file = './PDF/rank_correlation.pdf', width = 11, height = 8.5)
par(mfrow = c(1,3), mar = c(2,1,5,1)+0.1)
for(a in 1:22) {
for(gcm in gcmList_) {
load(paste0('./workspaces/06 - ', gcm, ' Projections'))
if(gcm == 'Lorenz_ccsm') g <- 'CCSM'
if(gcm == 'ecbilt') g <- 'ECBilt'
if(gcm == 'Beyer') g <- 'HadAM3H'
t <- paste0('Pearson Correlation,\nPollen & ', g, '\n', climYears[a], ' ybp')
thisRast <- raster::resample(meansList[[a]], pollenRast[[a]], method = 'bilinear')
cor <- rasterCorrelation(thisRast, pollenRast[[a]], type = 'pearson')
plot(cor, main = t, axes = F, box = F, legend.mar = 10, col = colors)
plot(raster::crop(sp::spTransform(world, CRS(projection(cor))), extent(cor)),
border = 'black', add = T)
}
dev.off()
rm(list = ls())
library(spatialEco)
library(enmSdm)
library(stats)
setwd('/Volumes/lj_mac_22/MOBOT/PVMvsENM')
gcmList_ <- c('Lorenz_ccsm', 'ecbilt', 'Beyer')
pc <- 5
# set constants
climYears <- seq(21000, 0, by=-1000)
studyRegionFileName <- './regions/study_region_daltonIceMask_lakesMasked_linearIceSheetInterpolation.tif'
studyRegionRasts <- brick(studyRegionFileName)
world <- ne_countries(scale = "medium", returnclass = "sf")
world <- as(world, "Spatial")
pollenRast <- brick('/Volumes/lj_mac_22/pollen/predictions-FRAXINUS_meanpred.tif')
a <- 1
gcm <- 'ecbilt'
load(paste0('./workspaces/06 - ', gcm, ' Projections'))
if(gcm == 'ecbilt') g <- 'ECBilt'
t <- paste0('Pearson Correlation,\nPollen & ', g, '\n', climYears[a], ' ybp')
thisRast <- raster::resample(meansList[[a]], pollenRast[[a]], method = 'bilinear')
a <- 3
t <- paste0('Pearson Correlation,\nPollen & ', g, '\n', climYears[a], ' ybp')
thisRast <- raster::resample(meansList[[a]], pollenRast[[a]], method = 'bilinear')
cor <- rasterCorrelation(thisRast, pollenRast[[a]], type = 'pearson')
plot(cor, main = t, axes = F, box = F, legend.mar = 10, col = colors)
plot(raster::crop(sp::spTransform(world, CRS(projection(cor))), extent(cor)),
border = 'black', add = T)
