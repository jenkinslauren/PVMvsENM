# remove wdi & etr variables
fileList <- Filter(function(x) !any(grepl("ETR", x)), fileList)
fileList <- Filter(function(x) !any(grepl("WDI", x)), fileList)
thisClim <- lapply(fileList, raster)
thisClim <- brick(thisClim)
names(thisClim) <- paste0(names(thisClim), '_',
substr(dir, nchar(dir)-6+1, nchar(dir)-2), 'YBP')
clim <- if(exists('clim')) {
stack(clim, thisClim)
} else {
thisClim
}
clim
dirList
sub('.+/LJ(.+)', '\\1', dir)
sub('.+LJ/(.+)', '\\1', dir)
rm(clim)
for (dir in dirList) {
fileList <- list.files(path = dir, pattern = '*.tif',
all.files = TRUE, full.names = TRUE)
# remove wdi & etr variables
fileList <- Filter(function(x) !any(grepl("ETR", x)), fileList)
fileList <- Filter(function(x) !any(grepl("WDI", x)), fileList)
thisClim <- lapply(fileList, raster)
thisClim <- brick(thisClim)
names(thisClim) <- paste0(names(thisClim), '_',
sub('.+LJ/(.+)', '\\1', dir))
clim <- if(exists('clim')) {
stack(clim, thisClim)
} else {
thisClim
}
clim
names(clim)
thisClim <- lapply(fileList, brick)
thisClim <- stack(thisClim)
thisClim
thisClim <- lapply(fileList, brick)
names(thisClim)
thisClim
rm(clim)
for (dir in dirList) {
fileList <- list.files(path = dir, pattern = '*.tif',
all.files = TRUE, full.names = TRUE)
# remove wdi & etr variables
fileList <- Filter(function(x) !any(grepl("ETR", x)), fileList)
fileList <- Filter(function(x) !any(grepl("WDI", x)), fileList)
thisClim <- lapply(fileList, brick)
# thisClim <- stack(thisClim)
names(thisClim) <- paste0(names(thisClim), '_',
sub('.+LJ/(.+)', '\\1', dir))
clim <- if(exists('clim')) {
stack(clim, thisClim)
} else {
thisClim
}
rm(clim)
for (dir in dirList) {
fileList <- list.files(path = dir, pattern = '*.tif',
all.files = TRUE, full.names = TRUE)
# remove wdi & etr variables
fileList <- Filter(function(x) !any(grepl("ETR", x)), fileList)
fileList <- Filter(function(x) !any(grepl("WDI", x)), fileList)
thisClim <- lapply(fileList, raster)
thisClim <- brick(thisClim)
names(thisClim) <- paste0(names(thisClim), '_',
sub('.+LJ/(.+)', '\\1', dir))
clim <- if(exists('clim')) {
stack(clim, thisClim)
} else {
thisClim
}
clim
an_avg_TMAX <- raster::subset(clim, grep('an_avg_TMAX', names(clim)))
an_avg_TMAX
an_sum_PRCP <- raster::subset(clim, grep('an_sum_PRCP', names(clim)))
lorenz <- stack(an_avg_TMAX, an_sum_PRCP)
lorenz
dirList
order(dirList)
dirList[order(as.numeric(gsub(".*LJ/|\\..*", "", fileList)))]
dirList[order(as.numeric(gsub(".*LJ/|\\..*", "", dirList)))]
dirList[order(as.numeric(gsub(".*LJ/|\\..BP*", "", dirList)))]
dirList[order(as.numeric(gsub(".*LJ/|\\..*BP", "", dirList)))]
sub(".*LJ/", "BP", dirList)
sub(".*LJ/", "", dirList)
sub(".*LJ/*BP", "", dirList)
sub(".*LJ/", "", dirList)
sub(".*LJ/(.*)\\BP$", "\\1", dirList)
sub(".*LJ/(.*)\BP$", "\\1", dirList)
sub(".*LJ/(.*)\\BP$", '', dirList)
sub(".*LJ/(.*)\\BP$", "\\1", dirList)
sub(".*LJ/(.*)\\BP", "\\1", dirList)
sub(".*LJ/(.*)\\BP", "\1", dirList)
sub(".*LJ/(.*)\\BP", "\\1", dirList)
as.numeric(gsub("([0-9]+).*$", "\\1", dirList))
library(gtools)
mixedsort(dirList)
rm(clim)
# retrieve list of files
dirList <- list.dirs(path = './data_and_analyses/env_data/Lorenz/V2/ccsm_21-0k_all_tifs_LJ',
recursive = FALSE)
dirList <- mixedsort(dirList)
for (dir in dirList) {
fileList <- list.files(path = dir, pattern = '*.tif',
all.files = TRUE, full.names = TRUE)
# remove wdi & etr variables
fileList <- Filter(function(x) !any(grepl("ETR", x)), fileList)
fileList <- Filter(function(x) !any(grepl("WDI", x)), fileList)
thisClim <- lapply(fileList, raster)
thisClim <- brick(thisClim)
names(thisClim) <- paste0(names(thisClim), '_',
sub('.+LJ/(.+)', '\\1', dir))
clim <- if(exists('clim')) {
stack(clim, thisClim)
} else {
thisClim
}
clim
an_avg_TMAX <- raster::subset(clim, grep('an_avg_TMAX', names(clim)))
an_sum_PRCP <- raster::subset(clim, grep('an_sum_PRCP', names(clim)))
lorenz <- stack(an_avg_TMAX, an_sum_PRCP)
climDf <- as.data.frame(lorenz)
climDf
View(climDf)
an_avg_TMAX <- brick(an_avg_TMAX)
an_sum_PRCP <- brick(an_sum_PRCP)
lorenz <- stack(an_avg_TMAX, an_sum_PRCP)
lorenz
climDf <- as.data.frame(lorenz)
View(climDf)
climList <- list()
vars <- c('an_avg_TMAX', 'an_sum_PRCP')
yrs <- paste0(1:22)
for(i in 1:22) {
climTimes <- list()
for(var in vars) {
index <- paste0(var, ".", i)
climTimes <- append(climTimes, lorenz[[index]])
}
climList <- append(climList,brick(climTimes))
}
index <- paste0(var, ".", i)
climTimes <- append(climTimes, lorenz[[index]])
i
climList <- list()
for(i in 1:22) {
climTimes <- list()
for(var in vars) {
index <- paste0(var, ".", i)
climTimes <- append(climTimes, lorenz[[i]])
}
climList <- append(climList,brick(climTimes))
}
climList
lorenz <- lapply(climList, stack)
# build climate over all time periods, not just the latest
# using 10,000 random background points, extracted climate at these points
# for each time period
buildClim <- function(brick) {
# df <- data.frame()
for (i in 1:nlayers(brick)) {
# extract environment at each site
randomBgEnv <- extract(brick, randomBgSites)
randomBgEnv <- as.data.frame(randomBgEnv)
# remove any NAs for at least one variable
# isNa <- is.na(rowSums(randomBgEnv))
# if (any(isNa)) {
#   randomBgSites <- randomBgSites[-which(isNa), ]
#   randomBgEnv <- randomBgEnv[-which(isNa), ]
# }
randomBg <- cbind(randomBgSites, randomBgEnv)
names(randomBg)[1:3] <- c('longitude', 'latitude',
sub("\\..*", "", names(brick[[1]])))
# head(randomBg)
df <- rbind(df, randomBg)
}
return(df)
}
listofDf <- list()
fileList
clim
clim[[1]]
nlayers(clim)
clim[[1]]
clim[[51]]
clim[[52]]
clim[[10]]
clim[[60]]
names(thisClim)
n <- names(thisClim)
n <- sub("\\_[0-9].*", "", str1)
n <- sub("\\_[0-9].*", "", n)
n
dirList <- dirList[2:22]
dirList
rm(clim)
for (dir in dirList) {
fileList <- list.files(path = dir, pattern = '*.tif',
all.files = TRUE, full.names = TRUE)
# remove wdi & etr variables
fileList <- Filter(function(x) !any(grepl("ETR", x)), fileList)
fileList <- Filter(function(x) !any(grepl("WDI", x)), fileList)
thisClim <- lapply(fileList, raster)
thisClim <- brick(thisClim)
names(thisClim) <- paste0(names(thisClim), '_',
sub('.+LJ/(.+)', '\\1', dir))
clim <- if(exists('clim')) {
stack(clim, thisClim)
} else {
thisClim
}
clim
names(clim)
rm(clim)
length(fileList)
rm(clim)
for (dir in dirList) {
fileList <- list.files(path = dir, pattern = '*.tif',
all.files = TRUE, full.names = TRUE)
# remove wdi & etr variables
fileList <- Filter(function(x) !any(grepl("ETR", x)), fileList)
fileList <- Filter(function(x) !any(grepl("WDI", x)), fileList)
print(length(fileList))
thisClim <- lapply(fileList, raster)
thisClim <- brick(thisClim)
names(thisClim) <- paste0(names(thisClim), '_',
sub('.+LJ/(.+)', '\\1', dir))
clim <- if(exists('clim')) {
stack(clim, thisClim)
} else {
thisClim
}
rm(clim)
for (dir in dirList) {
fileList <- list.files(path = dir, pattern = '*.tif',
all.files = TRUE, full.names = TRUE)
# remove wdi & etr variables
fileList <- Filter(function(x) !any(grepl("ETR", x)), fileList)
fileList <- Filter(function(x) !any(grepl("WDI", x)), fileList)
print(paste0(sub('.+LJ/(.+)', '\\1', dir), 'YBP ', length(fileList)))
thisClim <- lapply(fileList, raster)
thisClim <- brick(thisClim)
names(thisClim) <- paste0(names(thisClim), '_',
sub('.+LJ/(.+)', '\\1', dir))
clim <- if(exists('clim')) {
stack(clim, thisClim)
} else {
thisClim
}
# retrieve list of files
dirList <- list.dirs(path = './data_and_analyses/env_data/Lorenz/V2/ccsm_21-0k_all_tifs_LJ',
recursive = FALSE)
dirList <- dirList[2:22]
dirList <- mixedsort(dirList)
rm(clim)
for (dir in dirList) {
fileList <- list.files(path = dir, pattern = '*.tif',
all.files = TRUE, full.names = TRUE)
# remove wdi & etr variables
fileList <- Filter(function(x) !any(grepl("ETR", x)), fileList)
fileList <- Filter(function(x) !any(grepl("WDI", x)), fileList)
print(paste0(sub('.+LJ/(.+)', '\\1', dir), 'YBP ', length(fileList)))
thisClim <- lapply(fileList, raster)
thisClim <- brick(thisClim)
names(thisClim) <- paste0(names(thisClim), '_',
sub('.+LJ/(.+)', '\\1', dir))
clim <- if(exists('clim')) {
stack(clim, thisClim)
} else {
thisClim
}
# retrieve list of files
dirList <- list.dirs(path = './data_and_analyses/env_data/Lorenz/V2/ccsm_21-0k_all_tifs_LJ',
recursive = FALSE)
dirList <- mixedsort(dirList)
rm(clim)
for (dir in dirList) {
fileList <- list.files(path = dir, pattern = '*.tif',
all.files = TRUE, full.names = TRUE)
# remove wdi & etr variables
fileList <- Filter(function(x) !any(grepl("ETR", x)), fileList)
fileList <- Filter(function(x) !any(grepl("WDI", x)), fileList)
# print(paste0(sub('.+LJ/(.+)', '\\1', dir), 'YBP ', length(fileList)))
thisClim <- lapply(fileList, raster)
thisClim <- brick(thisClim)
names(thisClim) <- paste0(names(thisClim), '_',
sub('.+LJ/(.+)', '\\1', dir))
clim <- if(exists('clim')) {
stack(clim, thisClim)
} else {
thisClim
}
clim
vars <- names(thisClim)
vars <- sub("\\_[0-9].*", "", n)
j <- 1
stack <- append(stack, clim[[j]])
stack <- list()
stack <- append(stack, clim[[j]])
for(i in 1:38) {
stack <- append(stack, clim[[j*i + 38]])
}
stack
stack <- list()
stack <- append(stack, clim[[j]])
for(i in 1:38) {
stack <- append(stack, clim[[(j*i) + 38]])
}
stack
stack <- list()
stack <- append(stack, clim[[j]])
x <- 1
stack <- list()
stack <- append(stack, clim[[j]])
x <- j
while(x < nlayers(clim)) {
stack <- append(stack, clim[[x]])
x <- x + 38
}
stack
brick(stack)
bricks <- list()
bricks <- append(bricks, brick(stack))
bricks
bricks <- list()
for (j in 1:38) {
stack <- list()
x <- j
while(x < nlayers(clim)) {
stack <- append(stack, clim[[x]])
x <- x + 38
}
bricks <- append(bricks, brick(stack))
}
bricks
length(brick)
length(bricks)
plot(bricks[[1]])
i <- 1
for (var in vars) {
outfile <- paste0('./data_and_analyses/env_data/Lorenz/tifs/', var, '.tif')
writeRaster(bricks[[i]], outfile, format = 'GTiff', overwrite = T)
i <- i + 1
}
bricks[[i]]
for (var in vars) {
outfile <- paste0('./data_and_analyses/env_data/Lorenz/tifs/', var, '.tif')
writeRaster(stack(bricks[[i]]), outfile, format = 'GTiff', overwrite = T)
i <- i + 1
}
writeRaster(brick(bricks[[i]]), outfile, format = 'GTiff', overwrite = T)
plot(bricks[[i]])
plot(stack(bricks[[i]]))
writeRaster(stack(bricks[[i]]), outfile, format = 'GTiff', overwrite = T)
getwd()
i <- 1
for (var in vars) {
outfile <- paste0('./data_and_analyses/env_data/Lorenz/V2/ccsm_21-0k_all_tifs_LJ/', var, '.tif')
writeRaster(bricks[[i]], outfile, format = 'GTiff', overwrite = T)
i <- i + 1
}
an_avg_TMAX <- raster::subset(clim, grep('an_avg_TMAX', names(clim)))
an_sum_PRCP <- raster::subset(clim, grep('an_sum_PRCP', names(clim)))
fileList <- list.files(path = './data_and_analyses/Lorenz/V2/ccsm_21-0k_all_tifs_LJ/',
pattern='*.tif', all.files=TRUE, full.names=TRUE)
fileList <- list.files(path = './data_and_analyses/env_data/Lorenz/V2/ccsm_21-0k_all_tifs_LJ',
pattern='*.tif', all.files=TRUE, full.names=TRUE)
fileList <- fileList[1:2]
lorenz <- lapply(fileList, brick)
lorenz <- stack(lorenz)
climDf <- as.data.frame(lorenz)
climList <- list()
vars <- c('an_avg_TMAX', 'an_sum_PRCP')
yrs <- paste0(1:22)
for(i in 1:22) {
climTimes <- list()
for(var in vars) {
index <- paste0(var, ".", i)
climTimes <- append(climTimes, lorenz[[i]])
}
climList <- append(climList,brick(climTimes))
}
lorenz <- lapply(climList, stack)
# build climate over all time periods, not just the latest
# using 10,000 random background points, extracted climate at these points
# for each time period
buildClim <- function(brick) {
# df <- data.frame()
for (i in 1:nlayers(brick)) {
# extract environment at each site
randomBgEnv <- extract(brick, randomBgSites)
randomBgEnv <- as.data.frame(randomBgEnv)
# remove any NAs for at least one variable
# isNa <- is.na(rowSums(randomBgEnv))
# if (any(isNa)) {
#   randomBgSites <- randomBgSites[-which(isNa), ]
#   randomBgEnv <- randomBgEnv[-which(isNa), ]
# }
randomBg <- cbind(randomBgSites, randomBgEnv)
names(randomBg)[1:3] <- c('longitude', 'latitude',
sub("\\..*", "", names(brick[[1]])))
# head(randomBg)
df <- rbind(df, randomBg)
}
return(df)
}
listofDf <- list()
bricks <- lapply(fileList, brick)
df <- data.frame()
# list of dataframes containing the data for each variable
# so, listofDf[1] = bioclim1, listofDf[2] = bioclim4
# recall the last 2 variables (18 & 19) = cloudiness & relative_humidity
randomBgSites <- randomPoints(clim[[1]], 10000)
df <- lapply(bricks, buildClim)
stackDfs <- list()
for (n in 1:length(df)) {
dfn <- df[[n]]
dfn <- data.frame(dfn[1:2], stack(dfn[3:ncol(dfn)]))
names(dfn)[3] <- as.character(dfn$ind[1])
dfn$ind <- NULL
stackDfs[[n]] <- dfn
}
df1 <- stackDfs[[1]]
df2 <- stackDfs[[2]]
dfFinal <- cbind(df1, df2[,3])
names(dfFinal)[4] <- colnames(df2)[3]
for (n in 3:length(stackDfs)) {
temp <- stackDfs[[n]]
dfFinal <- cbind(dfFinal, temp[,3])
names(dfFinal)[n + 2] <- colnames(temp)[3]
}
df1
View(df1)
View(df2)
climxDf <- dfFinal
climRast <- rasterFromXYZ(climxDf)
climx <- stack(climRast)
climxDf <- as.data.frame(climx)
View(climxDf)
# PCA on climate (only)
nonNas <- which(complete.cases(climxDf))
climxDf <- climxDf[nonNas, ]
nonNas <- which(complete.cases(climDf))
climDf <- climDf[nonNas, ]
pca <- prcomp(climxDf, center = TRUE, scale = TRUE)
plot(pca)
summary(pca)
fileList <- list.files(path = './data_and_analyses/env_data/Lorenz/V2/ccsm_21-0k_all_tifs_LJ',
pattern='*.tif', all.files=TRUE, full.names=TRUE)
fileList <- fileList[1:2]
fileList <- append(fileList, fileList[2])
fileList
fileList <- list.files(path = './data_and_analyses/env_data/Lorenz/V2/ccsm_21-0k_all_tifs_LJ',
pattern='*.tif', all.files=TRUE, full.names=TRUE)
fileList
fileList <- fileList[1,5]
fileList <- c(fileList[1], fileList[5])
fileList
lorenz <- lapply(fileList, brick)
lorenz <- stack(lorenz)
climDf <- as.data.frame(lorenz)
climList <- list()
vars <- c('an_avg_TMAX', 'an_sum_PRCP')
yrs <- paste0(1:22)
for(i in 1:22) {
climTimes <- list()
for(var in vars) {
index <- paste0(var, ".", i)
climTimes <- append(climTimes, lorenz[[i]])
}
climList <- append(climList,brick(climTimes))
}
lorenz <- lapply(climList, stack)
# build climate over all time periods, not just the latest
# using 10,000 random background points, extracted climate at these points
# for each time period
buildClim <- function(brick) {
# df <- data.frame()
for (i in 1:nlayers(brick)) {
# extract environment at each site
randomBgEnv <- extract(brick, randomBgSites)
randomBgEnv <- as.data.frame(randomBgEnv)
# remove any NAs for at least one variable
# isNa <- is.na(rowSums(randomBgEnv))
# if (any(isNa)) {
#   randomBgSites <- randomBgSites[-which(isNa), ]
#   randomBgEnv <- randomBgEnv[-which(isNa), ]
# }
randomBg <- cbind(randomBgSites, randomBgEnv)
names(randomBg)[1:3] <- c('longitude', 'latitude',
sub("\\..*", "", names(brick[[1]])))
# head(randomBg)
df <- rbind(df, randomBg)
}
return(df)
}
listofDf <- list()
bricks <- lapply(fileList, brick)
df <- data.frame()
# list of dataframes containing the data for each variable
# so, listofDf[1] = bioclim1, listofDf[2] = bioclim4
# recall the last 2 variables (18 & 19) = cloudiness & relative_humidity
randomBgSites <- randomPoints(clim[[1]], 10000)
df <- lapply(bricks, buildClim)
# list of dataframes containing the data for each variable
# so, listofDf[1] = bioclim1, listofDf[2] = bioclim4
# recall the last 2 variables (18 & 19) = cloudiness & relative_humidity
randomBgSites <- randomPoints(lorenz[[1]], 10000)
df <- lapply(bricks, buildClim)
rm(df)
df <- lapply(bricks, buildClim)
