fontface = 'bold', hjust = 0.5)
title95 <- ggdraw() +
draw_label("Biotic Velocity of Northern Edge 95th quantile)",
fontface = 'bold', hjust = 0.5)
plot_grid(title05, plot_grid(ct05, cf05), title95,
plot_grid(ct95, cf95), ncol = 1, rel_heights = c(0.1, 1))
title95 <- ggdraw() +
draw_label("Biotic Velocity of Northern Edge (95th quantile)",
fontface = 'bold', hjust = 0.5)
plot_grid(title05, plot_grid(ct05, cf05), title95,
plot_grid(ct95, cf95), ncol = 1, rel_heights = c(0.1, 1))
bvCCSMMean$time <- paste0(abs(bvCCSMMean$timeFrom)/1000, '-', abs(bvCCSMMean$timeTo)/1000, ' kybp')
bvCCSMMean$time <- factor(bvCCSMMean$time, levels = rev(mixedsort(bvCCSMMean$time)))
bvCCSMMeanF$time <- paste0(abs(bvCCSMMeanF$timeFrom)/1000, '-', abs(bvCCSMMeanF$timeTo)/1000, ' kybp')
bvCCSMMeanF$time <- factor(bvCCSMMeanF$time, levels = rev(mixedsort(bvCCSMMeanF$time)))
ct05 <- ggplot(bvCCSMMean, aes(time, nsQuantVelocity_quant0p05, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() +
ggtitle("Shared Cells Only") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
cf05 <- ggplot(bvCCSMMeanF, aes(time, nsQuantVelocity_quant0p05, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() +
ggtitle("All Cells") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
ct95 <- ggplot(bvCCSMMean, aes(time, nsQuantVelocity_quant0p95, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() +
ggtitle("Shared Cells Only") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
cf95 <- ggplot(bvCCSMMeanF, aes(time, nsQuantVelocity_quant0p95, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() +
ggtitle("All Cells") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
title05 <- ggdraw() +
draw_label("Biotic Velocity of Southern Edge (5th quantile)",
fontface = 'bold', hjust = 0.5)
title95 <- ggdraw() +
draw_label("Biotic Velocity of Northern Edge (95th quantile)",
fontface = 'bold', hjust = 0.5)
plot_grid(title05, plot_grid(ct05, cf05), title95,
plot_grid(ct95, cf95), ncol = 1, rel_heights = c(0.1, 1))
titleGCM <- ggdraw() + draw_label("GCM = CCSM", hjust = 0.5)
plot_grid(titleGCM, title05, plot_grid(ct05, cf05), title95,
plot_grid(ct95, cf95), ncol = 1, rel_heights = c(0.1, 1))
plot_grid(title05, titleGCM, plot_grid(ct05, cf05), title95,
plot_grid(ct95, cf95), ncol = 1, rel_heights = c(0.1, 1))
title05 <- ggdraw() +
draw_label(bquote(bold("Biotic Velocity of Southern Edge (5th quantile)") ~ "GCM  CCSM"),
fontface = 'bold', hjust = 0.5)
plot_grid(title05, plot_grid(ct05, cf05), title95,
plot_grid(ct95, cf95), ncol = 1, rel_heights = c(0.1, 1))
title05 <- ggdraw() +
draw_label(bquote(bold("Biotic Velocity of Southern Edge (5th quantile)") ~ "\nGCM = CCSM"),
fontface = 'bold', hjust = 0.5)
plot_grid(title05, plot_grid(ct05, cf05), title95,
plot_grid(ct95, cf95), ncol = 1, rel_heights = c(0.1, 1))
title05 <- ggdraw() +
draw_label(bquote(bold("Biotic Velocity of Southern Edge (5th quantile)\n") ~ "GCM = CCSM"),
fontface = 'bold', hjust = 0.5)
plot_grid(title05, plot_grid(ct05, cf05), title95,
plot_grid(ct95, cf95), ncol = 1, rel_heights = c(0.1, 1))
title05 <- ggdraw() +
draw_label(bquote(bold("Biotic Velocity of Southern Edge (5th quantile)\n") ~ "GCM = CCSM"),
hjust = 0.5)
title95 <- ggdraw() +
draw_label("Biotic Velocity of Northern Edge (95th quantile)",
fontface = 'bold', hjust = 0.5)
plot_grid(title05, plot_grid(ct05, cf05), title95,
plot_grid(ct95, cf95), ncol = 1, rel_heights = c(0.1, 1))
title05 <- ggdraw() +
draw_label(bquote(bold("Biotic Velocity of Southern Edge (5th quantile)") ~ "GCM = CCSM"),
hjust = 0.5)
plot_grid(title05, plot_grid(ct05, cf05), title95,
plot_grid(ct95, cf95), ncol = 1, rel_heights = c(0.1, 1))
title05 <- ggdraw() +
draw_label(label = "Biotic Velocity of Southern Edge (5th quantile)",
fontface = 'bold', hjust = 0.5) +
draw_label(label = "GCM = CCSM", hjust = 0.5)
title95 <- ggdraw() +
draw_label("Biotic Velocity of Northern Edge (95th quantile)",
fontface = 'bold', hjust = 0.5)
plot_grid(title05, plot_grid(ct05, cf05), title95,
plot_grid(ct95, cf95), ncol = 1, rel_heights = c(0.1, 1))
title05 <- ggdraw() +
draw_label(label = "Biotic Velocity of Southern Edge (5th quantile)",
fontface = 'bold', hjust = 0.5) +
draw_label(label = "\nGCM = CCSM", hjust = 0.5)
title95 <- ggdraw() +
draw_label("Biotic Velocity of Northern Edge (95th quantile)",
fontface = 'bold', hjust = 0.5)
plot_grid(title05, plot_grid(ct05, cf05), title95,
plot_grid(ct95, cf95), ncol = 1, rel_heights = c(0.1, 1))
plot_grid(title05, plot_grid(ct05, cf05), title95,
plot_grid(ct95, cf95), ncol = 1, rel_heights = c(0.2, 1))
title05 <- ggdraw() +
draw_label(label = "Biotic Velocity of Southern Edge (5th quantile)\n",
fontface = 'bold', hjust = 0.5) +
draw_label(label = "\nGCM = CCSM", hjust = 0.5)
title95 <- ggdraw() +
draw_label("Biotic Velocity of Northern Edge (95th quantile)",
fontface = 'bold', hjust = 0.5)
plot_grid(title05, plot_grid(ct05, cf05), title95,
plot_grid(ct95, cf95), ncol = 1, rel_heights = c(0.2, 1))
plot_grid(title05, plot_grid(ct05, cf05), title95,
plot_grid(ct95, cf95), ncol = 1, rel_heights = c(0.25, 1))
plot_grid(title05, plot_grid(ct05, cf05), title95,
plot_grid(ct95, cf95), ncol = 1, rel_heights = c(0.3, 1))
plot_grid(title05, plot_grid(ct05, cf05), title95,
plot_grid(ct95, cf95), ncol = 1, rel_heights = c(0.2, 1))
rm(list=ls())
library(enmSdm)
library(gtools)
library(ggplot2)
library(cowplot)
library(tidyr)
library(tidyverse)
library(raster)
library(utils)
setwd('/Volumes/lj_mac_22/MOBOT/PVMvsENM')
pdf <- pdf(file = './PDF/ns_quant.pdf', width = 11, height = 8.5)
gcm <- 'pollen'
fileName <- '/Volumes/lj_mac_22/pollen/predictions-FRAXINUS_meanpred.tif'
pollenRast <- brick(fileName)
pollenStack <- stack(fileName)
projection(pollenStack) <- getCRS('albersNA')
# note: there is no difference in output between onlyInSharedCells = T & F
bvPollen <- bioticVelocity(pollenStack, times = seq(-21000,0, by=1000), onlyInSharedCells = T)
bvPollenF <- bioticVelocity(pollenStack, times = seq(-21000,0, by=1000), onlyInSharedCells = F)
bvPollen$time <- paste0(abs(bvPollen$timeFrom)/1000, '-', abs(bvPollen$timeTo)/1000, ' kybp')
bvPollen$time <- factor(bvPollen$time, levels = rev(mixedsort(bvPollen$time)))
bvPollenF$time <- paste0(abs(bvPollenF$timeFrom)/1000, '-', abs(bvPollenF$timeTo)/1000, ' kybp')
bvPollenF$time <- factor(bvPollenF$time, levels = rev(mixedsort(bvPollenF$time)))
pt05 <- ggplot(bvPollen, aes(time, nsQuantVelocity_quant0p05, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() +
ggtitle("Shared Cells Only") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
pf05 <- ggplot(bvPollenF, aes(time, nsQuantVelocity_quant0p05, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() +
ggtitle("All Cells") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
pt95 <- ggplot(bvPollen, aes(time, nsQuantVelocity_quant0p95, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() +
ggtitle("Shared Cells Only") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
pf95 <- ggplot(bvPollenF, aes(time, nsQuantVelocity_quant0p95, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() +
ggtitle("All Cells") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
title05 <- ggdraw() +
draw_label(label = "Biotic Velocity of Southern Edge (5th quantile)\n",
fontface = 'bold', hjust = 0.5) +
draw_label(label = "\nPollen", hjust = 0.5)
title95 <- ggdraw() +
draw_label("Biotic Velocity of Northern Edge (95th quantile)",
fontface = 'bold', hjust = 0.5)
plot_grid(title05, plot_grid(pt05, pf05), title95,
plot_grid(pt95, pf95), ncol = 1, rel_heights = c(0.2, 1))
load(paste0('./workspaces/06 - Beyer Projections'))
# Beyer Means
stackMeansList <- stack(meansList)
projection(stackMeansList) <- getCRS('albersNA')
bvBeyerMeans <- bioticVelocity(stackMeansList, times = seq(-21000, 0, by = 1000), onlyInSharedCells = T)
bvBeyerMeansF <- bioticVelocity(stackMeansList, times = seq(-21000, 0, by = 1000), onlyInSharedCells = F)
bvBeyerMeans$time <- paste0(abs(bvBeyerMeans$timeFrom)/1000, '-', abs(bvBeyerMeans$timeTo)/1000, ' kybp')
bvBeyerMeans$time <- factor(bvBeyerMeans$time, levels = rev(mixedsort(bvBeyerMeans$time)))
bvBeyerMeansF$time <- paste0(abs(bvBeyerMeansF$timeFrom)/1000, '-', abs(bvBeyerMeansF$timeTo)/1000, ' kybp')
bvBeyerMeansF$time <- factor(bvBeyerMeansF$time, levels = rev(mixedsort(bvBeyerMeansF$time)))
bt05 <- ggplot(bvBeyerMeans, aes(time, nsQuantVelocity_quant0p05, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() +
ggtitle("Shared Cells Only") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
bf05 <- ggplot(bvBeyerMeansF, aes(time, nsQuantVelocity_quant0p05, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() +
ggtitle("All Cells") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
bt95 <- ggplot(bvBeyerMeans, aes(time, nsQuantVelocity_quant0p95, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() +
ggtitle("Shared Cells Only") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
bf95 <- ggplot(bvBeyerMeansF, aes(time, nsQuantVelocity_quant0p95, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() +
ggtitle("All Cells") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
title05 <- ggdraw() +
draw_label(label = "Biotic Velocity of Southern Edge (5th quantile)\n",
fontface = 'bold', hjust = 0.5) +
draw_label(label = "\nGCM = HadAM3H", hjust = 0.5)
title95 <- ggdraw() +
draw_label("Biotic Velocity of Northern Edge (95th quantile)",
fontface = 'bold', hjust = 0.5)
plot_grid(title05, plot_grid(bt05, bf05), title95,
plot_grid(bt95, bf95), ncol = 1, rel_heights = c(0.2, 1))
###############################################################################
######### CCSM
###############################################################################
load(paste0('./workspaces/06 - Lorenz_ccsm Projections'))
# Lorenz_ccsm Means
stackMeansList <- stack(meansList)
projection(stackMeansList) <- getCRS('albersNA')
bvCCSMMean <- bioticVelocity(stackMeansList, times = seq(-21000, 0, by = 1000), onlyInSharedCells = T)
bvCCSMMeanF <- bioticVelocity(stackMeansList, times = seq(-21000, 0, by = 1000), onlyInSharedCells = F)
bvCCSMMean$time <- paste0(abs(bvCCSMMean$timeFrom)/1000, '-', abs(bvCCSMMean$timeTo)/1000, ' kybp')
bvCCSMMean$time <- factor(bvCCSMMean$time, levels = rev(mixedsort(bvCCSMMean$time)))
bvCCSMMeanF$time <- paste0(abs(bvCCSMMeanF$timeFrom)/1000, '-', abs(bvCCSMMeanF$timeTo)/1000, ' kybp')
bvCCSMMeanF$time <- factor(bvCCSMMeanF$time, levels = rev(mixedsort(bvCCSMMeanF$time)))
ct05 <- ggplot(bvCCSMMean, aes(time, nsQuantVelocity_quant0p05, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() +
ggtitle("Shared Cells Only") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
cf05 <- ggplot(bvCCSMMeanF, aes(time, nsQuantVelocity_quant0p05, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() +
ggtitle("All Cells") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
ct95 <- ggplot(bvCCSMMean, aes(time, nsQuantVelocity_quant0p95, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() +
ggtitle("Shared Cells Only") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
cf95 <- ggplot(bvCCSMMeanF, aes(time, nsQuantVelocity_quant0p95, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() +
ggtitle("All Cells") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
title05 <- ggdraw() +
draw_label(label = "Biotic Velocity of Southern Edge (5th quantile)\n",
fontface = 'bold', hjust = 0.5) +
draw_label(label = "\nGCM = CCSM", hjust = 0.5)
title95 <- ggdraw() +
draw_label("Biotic Velocity of Northern Edge (95th quantile)",
fontface = 'bold', hjust = 0.5)
plot_grid(title05, plot_grid(ct05, cf05), title95,
plot_grid(ct95, cf95), ncol = 1, rel_heights = c(0.2, 1))
###############################################################################
######### ECBILT
###############################################################################
load(paste0('./workspaces/06 - ecbilt Projections'))
# ECBilt Means
stackMeansList <- stack(meansList)
projection(stackMeansList) <- getCRS('albersNA')
bvECBiltMean <- bioticVelocity(stackMeansList, times = seq(-21000, 0, by = 1000), onlyInSharedCells = T)
bvECBiltMeanF <- bioticVelocity(stackMeansList, times = seq(-21000, 0, by = 1000), onlyInSharedCells = F)
bvECBiltMean$time <- paste0(abs(bvECBiltMean$timeFrom)/1000, '-', abs(bvECBiltMean$timeTo)/1000, ' kybp')
bvECBiltMean$time <- factor(bvECBiltMean$time, levels = rev(mixedsort(bvECBiltMean$time)))
bvECBiltMeanF$time <- paste0(abs(bvECBiltMeanF$timeFrom)/1000, '-', abs(bvECBiltMeanF$timeTo)/1000, ' kybp')
bvECBiltMeanF$time <- factor(bvECBiltMeanF$time, levels = rev(mixedsort(bvECBiltMeanF$time)))
et05 <- ggplot(bvECBiltMean, aes(time, nsQuantVelocity_quant0p05, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() +
ggtitle("Shared Cells Only") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
ef05 <- ggplot(bvECBiltMeanF, aes(time, nsQuantVelocity_quant0p05, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() +
ggtitle("All Cells") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
et95 <- ggplot(bvECBiltMean, aes(time, nsQuantVelocity_quant0p95, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() +
ggtitle("Shared Cells Only") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
ef95 <- ggplot(bvECBiltMeanF, aes(time, nsQuantVelocity_quant0p95, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() +
ggtitle("All Cells") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
title05 <- ggdraw() +
draw_label(label = "Biotic Velocity of Southern Edge (5th quantile)\n",
fontface = 'bold', hjust = 0.5) +
draw_label(label = "\nGCM = ECBilt", hjust = 0.5)
title95 <- ggdraw() +
draw_label("Biotic Velocity of Northern Edge (95th quantile)",
fontface = 'bold', hjust = 0.5)
plot_grid(title05, plot_grid(et05, ef05), title95,
plot_grid(et95, ef95), ncol = 1, rel_heights = c(0.2, 1))
dev.off()
plot(envMap)
plot(envMap, col = colors)
rm(list = ls())
library(dplyr)
library(ggplot2)
library(tidyr)
library(raster)
library(rgdal)
library(enmSdm)
library(terra)
library(maxnet)
library(sf)
library(maps)
library(rnaturalearth)
library(rnaturalearthdata)
library(rnaturalearthhires)
setwd('/Volumes/lj_mac_22/MOBOT/PVMvsENM')
# constants
gcm <- 'Beyer'
pc <- 5
# load(paste0('./workspaces/06 - ', gcm, ' Projections'))
# load(paste0('./workspaces/PCA_', gcm, '_PC', pc))
speciesList <- c('Fraxinus americana','Fraxinus caroliniana', 'Fraxinus cuspidata',
'Fraxinus greggii', 'Fraxinus nigra', 'Fraxinus pennsylvanica',
'Fraxinus profunda', 'Fraxinus quadrangulata')
# set constants
climYears <- seq(21000, 0, by=-1000)
studyRegionFileName <- './regions/study_region_daltonIceMask_lakesMasked_linearIceSheetInterpolation.tif'
studyRegionRasts <- brick(studyRegionFileName)
getClimRasts <- function(pc, climYear) {
if (gcm == 'Beyer') { # Beyer
load('./data_and_analyses/env_data/Beyer/PCA_clim.Rdata')
load(paste0('./data_and_analyses/env_data/Beyer/pca_pc', pc, '.Rdata'))
fileName <- paste0('./data_and_analyses/env_data/Beyer/envDataClipped_',
climYear, 'KYBP_pc', pc, '.tif')
vars <- c("BIO1", paste0('BIO', 4:19), "cloudiness", "relative_humidity")
} else if (gcm == 'Lorenz_ccsm') { # CCSM
load(paste0('./data_and_analyses/env_data/Lorenz/PCA_', gcm, '_clim.Rdata'))
load(paste0('./data_and_analyses/env_data/Lorenz/V2/ccsm_21-0k_all_tifs_LJ/pca_pc', pc, '.Rdata'))
fileName <- paste0('./data_and_analyses/env_data/Lorenz/V2/ccsm_21-0k_all_tifs_LJ/envDataClipped_',
climYear, 'KYBP_pc', pc, '.tif')
clim <- lorenz
workingFolder <- './data_and_analyses/env_data/Lorenz/V2/ccsm_21-0k_all_tifs_LJ/vars'
vars <- sub('\\.tif.*', '', list.files(path = workingFolder,
pattern='*.tif', all.files = TRUE, full.names = FALSE))
vars <- vars[lapply(vars, function(x) length(grep("pca_", x, value = F))) == 0]
} else { # ECBilt
load(paste0('./data_and_analyses/env_data/Lorenz/PCA_', gcm, '_clim.Rdata'))
load(paste0('./data_and_analyses/env_data/Lorenz/V2/ecbilt_21-0k_all_tifs_LJ/pca_pc', pc, '.Rdata'))
fileName <- paste0('./data_and_analyses/env_data/Lorenz/V2/ecbilt_21-0k_all_tifs_LJ/envDataClipped_',
climYear, 'KYBP_pc', pc, '.tif')
clim <- lorenz
workingFolder <- paste0('./data_and_analyses/env_data/Lorenz/V2/',
gcm, '_21-0k_all_tifs_LJ/vars')
vars <- sub('\\.tif.*', '', list.files(path = workingFolder,
pattern='*.tif', all.files = TRUE, full.names = FALSE))
vars <- vars[lapply(vars, function(x) length(grep("pca_", x, value = F))) == 0]
}
if (file.exists(fileName)) {
envData <- brick(fileName)
# rename raster layers to pc's
names(envData) <- paste0('pca', 1:pc)
} else {
pcPrediction <- list()
for (i in 1:length(lorenz)) {
names(lorenz[[i]]) <- vars
pcPrediction[i] <- raster::predict(clim[[i]], pca, index = 1:pc)
names(pcPrediction[[i]]) <- paste0("pc", 1:pc, "_", (i-1)*1000, "KYBP")
}
envDataPca <- stack(pcPrediction)
# keep only rasters (first five rasters) for climate year
# climYear <- as.numeric(sub("KYBP.*", "", sub(".*_", "", names(envDataPca)[k*5])))
#print(paste0("clim year = ", climYear))
envYr <- pcPrediction[[(climYear/1000) + 1]]
# plot(envYr)
names(envYr) <- paste0('pca', 1:pc)
# check projections = wgs84
# print("Ensure that the projection of these rasters is WGS84:")
# print(paste0("Projection of envYr = ", projection(envYr)))
#
# define study region & extent, load if already defined
if (file.exists('./data_and_analyses/study_region/Study Region.Rdata') &
file.exists('./data_and_analyses/study_region/Study Region Extent.Rdata')) {
load('./data_and_analyses/study_region/Study Region.Rdata')
load('./data_and_analyses/study_region/Study Region Extent.Rdata')
} else {
studyRegion <- rgdal::readOGR('/Volumes/lj_mac_22/MOBOT/PVMvsENM/data_and_analyses/study_region',
'study_region')
studyRegion <- crop(studyRegion, extent(-178.2166, 83.7759, -55.90223, 83.6236))
projection(studyRegion) <- getCRS("WGS84")
studyExtent <- extent(studyRegion)
save(studyRegion,
file='/Volumes/lj_mac_22/MOBOT/PVMvsENM/data_and_analyses/study_region/Study Region.Rdata',
compress=TRUE)
save(studyExtent,
file='/Volumes/lj_mac_22/MOBOT/PVMvsENM/data_and_analyses/study_region/Study Region Extent.Rdata', compress=TRUE)
}
# clip environmental PCAs to study extent for given species, visualize, and save:
envDataClipped <- list()
for (i in 1:nlayers(envYr)) {
x <- envYr[[i]]
x <- crop(x, studyExtent)
# x <<- mask(x, studyRegion)
projection(x) <- getCRS("WGS84")
envDataClipped[[i]] <- x
envData <- stack(envDataClipped)
# plot(envData)
writeRaster(envData, fileName, format = 'GTiff', overwrite = T)
}
return(envData)
}
predictions <- function(speciesAb_, pc) {
predictors <<- c(paste0('pca', 1:pc))
for (climYear in climYears) {
climate <<- getClimRasts(pc = 5, climYear = climYear)
# plot(climate[[1]], main = paste0(climYear, ' ybp'))
climate <<- climate[[predictors]]
thisPred <<- predict(climate, envModel, clamp = F, type='cloglog')
# plot(thisPred, main = paste0("prediction at ", climYear, " ybp"))
names(thisPred) <<- (paste0(climYear, ' ybp'))
preds <<- if (exists('preds')) {
stack(preds, thisPred)
} else {
thisPred
}
return(preds)
}
sp <- speciesList[1]
species <- gsub(tolower(sp), pattern =' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
fileName <- list.files(path = paste0('./Models/Maxent/', speciesAb_, '_Maxent'),
pattern = paste0(gcm, '.Rdata'),
full.names = T)
load(fileName)
if(exists('preds')) rm(preds)
preds <- predictions(speciesAb_, pc)
nlayers(preds)
plot(preds)
plot(preds$X0.ybp)
plot(studyRegionRasts)
# project
preds2 <- projectRaster(preds, studyRegionRasts)
plot(preds2$X0.ybp)
plot(preds2$X0.ybp, col = colors)
plot(preds2$X0.ybp)
plot(studyRegionRasts$study_region_daltonIceMask_lakesMasked_linearIceSheetInterpolation.701)
plot(studyRegionRasts$study_region_daltonIceMask_lakesMasked_linearIceSheetInterpolation.1)
nlayers(studyRegionRasts)
library(RColorBrewer)
colors <- c('#d73027','#f46d43','#fdae61','#fee08b','#ffffbf','#d9ef8b','#a6d96a','#66bd63','#1a9850')
plots(preds2, col = colors)
plot(preds2, col = colors)
plot(preds2$X0.ybp)
plot(preds2$X0.ybp, col = colors)
# mask by study region and force values to be within [0, 1]
# (can get pushed outside this during re-projection)
preds2 <- raster::calc(preds2, fun = function(x) ifelse(x < 0, 0, x))
preds2 <- raster::calc(preds2, fun = function(x) ifelse(x > 1, 1, x))
plot(preds2$X0.ybp, col = colors)
nlayers(preds)
i <- 22
landMask <- (1 - studyRegionRasts[[i]])
plot(landMask, col = colors)
dev.off()
