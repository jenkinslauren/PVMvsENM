rm(list = ls())
library(raster)
library(enmSdm)
library(dplyr)
library(terra)
library(gtools)
setwd('/Volumes/lj_mac_22/MOBOT/PVMvsENM')
# set constants, define gcm & number of pc's to use in predictions
gcm <- 'ecbilt'
pc <- 5
workingFolder <- paste0('./data_and_analyses/env_data/Lorenz/V2/',
gcm, '_21-0k_all_tifs_LJ')
fileList <- list.files(path = workingFolder,
pattern='*.tif', all.files=TRUE, full.names=TRUE)
lorenz <- lapply(fileList, brick)
vars <- sub('\\_[0-9].*', '', names(thisClim))
# retrieve list of files
dirList <- list.dirs(path = workingFolder,
recursive = FALSE)
dirList <- mixedsort(dirList)
if(exists('clim')) rm(clim)
for (dir in dirList) {
fileList <- list.files(path = dir, pattern = '*.tif',
all.files = TRUE, full.names = TRUE)
# remove wdi & etr variables
fileList <- Filter(function(x) !any(grepl("ETR", x)), fileList)
fileList <- Filter(function(x) !any(grepl("WDI", x)), fileList)
# print(paste0(sub('.+LJ/(.+)', '\\1', dir), 'YBP ', length(fileList)))
thisClim <- lapply(fileList, raster)
thisClim <- brick(thisClim)
names(thisClim) <- paste0(names(thisClim), '_',
sub('.+LJ/(.+)', '\\1', dir))
clim <- if(exists('clim')) {
stack(clim, thisClim)
} else {
thisClim
}
fileList <- list.files(path = workingFolder,
pattern='*.tif', all.files=TRUE, full.names=TRUE)
lorenz <- lapply(fileList, brick)
lorenz <- stack(lorenz)
climDf <- as.data.frame(lorenz)
vars <- list.files(path = workingFolder,
pattern='*.tif', all.files = TRUE, full.names = FALSE)
vars <- sub('\\.tif.*', '', vars)
vars
vars <- sub('\\.tif.*', '', list.files(path = workingFolder,
pattern='*.tif', all.files = TRUE, full.names = FALSE))
vars
climList <- list()
for(i in 1:22) {
climTimes <- list()
for(var in vars) {
index <- paste0(var, ".", i)
climTimes <- append(climTimes, lorenz[[i]])
}
climList <- append(climList,brick(climTimes))
}
lorenz <- lapply(climList, stack)
for (i in 1:length(lorenz)) {
names(lorenz[[i]]) <- vars
}
# build climate over all time periods, not just the latest
# using 10,000 random background points, extract climate at these points
# for each time period
randomBgSites <- randomPoints(lorenz[[1]], 10000)
buildClim <- function(brick) {
# df <- data.frame()
for (i in 1:nlayers(brick)) {
# extract environment at each site
randomBgEnv <- extract(brick, randomBgSites)
randomBgEnv <- as.data.frame(randomBgEnv)
# remove any NAs for at least one variable
# isNa <- is.na(rowSums(randomBgEnv))
# if (any(isNa)) {
#   randomBgSites <- randomBgSites[-which(isNa), ]
#   randomBgEnv <- randomBgEnv[-which(isNa), ]
# }
randomBg <- cbind(randomBgSites, randomBgEnv)
names(randomBg)[1:3] <- c('longitude', 'latitude',
sub("\\..*", "", names(brick[[1]])))
# head(randomBg)
df <- rbind(df, randomBg)
}
return(df)
}
listofDf <- list()
bricks <- lapply(fileList, brick)
# list of dataframes containing the data for each variable
# so, listofDf[1] = first variable, listofDf[2] = second variable
df <- data.frame()
df <- lapply(bricks, buildClim)
stackDfs <- list()
for (n in 1:length(df)) {
dfn <- df[[n]]
dfn <- data.frame(dfn[1:2], stack(dfn[3:ncol(dfn)]))
names(dfn)[3] <- as.character(dfn$ind[1])
dfn$ind <- NULL
stackDfs[[n]] <- dfn
}
df1 <- stackDfs[[1]]
df2 <- stackDfs[[2]]
dfFinal <- cbind(df1, df2[,3])
names(dfFinal)[4] <- colnames(df2)[3]
for (n in 3:length(stackDfs)) {
temp <- stackDfs[[n]]
dfFinal <- cbind(dfFinal, temp[,3])
names(dfFinal)[n + 2] <- colnames(temp)[3]
}
climxDf <- dfFinal
climRast <- rasterFromXYZ(climxDf)
climx <- stack(climRast)
climxDf <- as.data.frame(climx)
nonNas <- which(complete.cases(climxDf))
climxDf <- climxDf[nonNas, ]
nonNas <- which(complete.cases(climDf))
climDf <- climDf[nonNas, ]
pca <- prcomp(climxDf, center = TRUE, scale = TRUE)
pca
pcPrediction <- list()
for (i in 1:length(lorenz)) {
names(lorenz[[i]]) <- vars
pcPrediction[i] <- raster::predict(lorenz[[i]], pca, index = 1:pc)
names(pcPrediction[[i]]) <- paste0("pc", 1:pc, "_", (i-1)*1000, "KYBP")
}
stackPca <- stack(pcPrediction)
plot(stackPca)
outfile <- paste0(workingFolder, '/pca_output_pc', pc,'.tif')
writeRaster(stackPca, outfile, format = 'GTiff', overwrite = T)
save.image(paste0('./PCA_Lorenz_', gcm, '_PC', pc))
rm(list = ls())
library(raster)
library(enmSdm)
library(dplyr)
library(terra)
setwd('/Volumes/lj_mac_22/MOBOT/PVMvsENM')
# set constants
pc <- 5
# retrieve list of files
fileList <- list.files(path = './data_and_analyses/env_data/Beyer/tifs',
pattern='*.tif', all.files=TRUE, full.names=TRUE)
clim <- lapply(fileList, brick)
clim <- stack(clim)
climDf <- as.data.frame(clim)
plot(clim)
plot(clim[[1]])
plot(clim[[12]])
plot(clim[[2]])
plot(clim[[3]])
plot(clim[[4]])
plot(clim[[5]])
plot(clim[[6]])
rm(list=ls())
setwd('/Volumes/lj_mac_22/MOBOT/PVMvsENM')
library(ncdf4)
library(raster)
# File path on Lauren's computer:
file <- "./data_and_analyses/env_data/Beyer/LateQuaternary_Environment.nc"
varName <- 'bio01'
if (grepl('bio', varName)) {
upperVar <- toupper(varName)
} else {
upperVar <- varName
}
outfile <- paste0('./data_and_analyses/env_data/Beyer/tifs/', upperVar, '/', upperVar, '.tif')
var <- brick(file, varname = upperVar, level = 1)
varName <- 'bio1'
if (grepl('bio', varName)) {
upperVar <- toupper(varName)
} else {
upperVar <- varName
}
outfile <- paste0('./data_and_analyses/env_data/Beyer/tifs/', upperVar, '/', upperVar, '.tif')
var <- brick(file, varname = upperVar, level = 1)
outfile <- paste0('./data_and_analyses/env_data/Beyer/tifs/', upperVar, '.tif')
var <- brick(file, varname = upperVar, level = 1)
plot(brick('./data_and_analyses/env_data/Beyer/tifs/BIO1.tif'))
b <- brick('./data_and_analyses/env_data/Beyer/tifs/BIO1.tif')
plot(b[[1]])
plot(b[[2]])
plot(b[[3]])
plot(b[[4]])
plot(b[[5]])
plot(b[[6]])
plot(b[[7]])
plot(b[[8]])
