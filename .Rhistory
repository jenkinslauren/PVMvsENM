par(mfrow=c(1,3))
for(gcm in gcmList) {
load(paste0('./Models/Maxent/', speciesAb_, '_Maxent/Model_PC', pc,
'_GCM_', gcm, '.rData'))
envMap <- raster(paste0('./Models/Maxent/', speciesAb_,
'_Maxent/GCM_', gcm,
'_PC', pc, '_', climYear, 'ybp.tif'))
# scale values between 0 and 1 so that maps are comparable between models
envMap <- raster::calc(envMap, fun = function(x) ifelse(x < 0, 0, x))
envMap <- raster::calc(envMap, fun = function(x) ifelse(x > 1, 1, x))
plot(rangeMap, border = 'blue',
main = paste0('Maxent\n', sp, ' occurrences,', '\nGCM = ', gcm))
plot(envMap, add = TRUE)
plot(rangeMap, border = 'blue', add = TRUE)
map("state", add = TRUE)
map("world", add = TRUE)
points(records$longitude, records$latitude, pch = 16, cex = 0.6,
col = alpha('red', 0.6))
}
dev.off()
load(paste0('./Models/Maxent/', speciesAb_, '_Maxent/Model_PC', pc,
'_GCM_', gcm, '.rData'))
envMap <- raster(paste0('./Models/Maxent/', speciesAb_,
'_Maxent/GCM_', gcm,
'_PC', pc, '_', climYear, 'ybp.tif'))
paste0('./Models/Maxent/', speciesAb_,
'_Maxent/GCM_', gcm,
'_PC', pc, '_', climYear, 'ybp.tif')
climYear <- 0
dev.off()
pdf(file = './Models/Maxent/all_models.pdf', height = 8.5, width = 11)
for(sp in speciesList) {
sp <- sp
# print(paste0("SPECIES = ", sp))
species <- gsub(tolower(sp), pattern=' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
par(mfrow=c(1,3))
for(gcm in gcmList) {
load(paste0('./Models/Maxent/', speciesAb_, '_Maxent/Model_PC', pc,
'_GCM_', gcm, '.rData'))
envMap <- raster(paste0('./Models/Maxent/', speciesAb_,
'_Maxent/GCM_', gcm,
'_PC', pc, '_', climYear, 'ybp.tif'))
# scale values between 0 and 1 so that maps are comparable between models
envMap <- raster::calc(envMap, fun = function(x) ifelse(x < 0, 0, x))
envMap <- raster::calc(envMap, fun = function(x) ifelse(x > 1, 1, x))
plot(rangeMap, border = 'blue',
main = paste0('Maxent\n', sp, ' occurrences,', '\nGCM = ', gcm))
plot(envMap, add = TRUE)
plot(rangeMap, border = 'blue', add = TRUE)
map("state", add = TRUE)
map("world", add = TRUE)
points(records$longitude, records$latitude, pch = 16, cex = 0.6,
col = alpha('red', 0.6))
}
dev.off()
# zoomed out
pdf(file = './Models/Maxent/all_models_zoomedOut.pdf', height = 8.5, width = 11)
for(sp in speciesList) {
sp <- sp
# print(paste0("SPECIES = ", sp))
species <- gsub(tolower(sp), pattern=' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
par(mfrow=c(1,3))
for(gcm in gcmList) {
load(paste0('./Models/Maxent/', speciesAb_, '_Maxent/Model_PC', pc,
'_GCM_', gcm, '.rData'))
envMap <- raster(paste0('./Models/Maxent/', speciesAb_,
'_Maxent/GCM_', gcm,
'_PC', pc, '_', climYear, 'ybp.tif'))
# scale values between 0 and 1 so that maps are comparable between models
envMap <- raster::calc(envMap, fun = function(x) ifelse(x < 0, 0, x))
envMap <- raster::calc(envMap, fun = function(x) ifelse(x > 1, 1, x))
plot(envMap, main = paste0('Maxent output, ', sp, ' occurrences,', '\nGCM = ', gcm))
plot(rangeMap, border = 'blue', add = TRUE)
points(records$longitude, records$latitude, pch = 16, cex = 0.3,
col = alpha('red', 0.6))
}
dev.off()
rm(list = ls())
library(dplyr)
library(ggplot2)
library(tidyr)
library(raster)
library(rgdal)
library(enmSdm)
library(terra)
library(maxnet)
library(sf)
library(maps)
library(rnaturalearth)
library(rnaturalearthdata)
library(rnaturalearthhires)
setwd('/Volumes/lj_mac_22/MOBOT/PVMvsENM')
# constants
gcm <- 'Lorenz_ccsm'
pc <- 5
# load(paste0('./workspaces/06 - ', gcm, ' Projections'))
# load(paste0('./workspaces/PCA_', gcm, '_PC', pc))
speciesList <- c('Fraxinus americana','Fraxinus caroliniana', 'Fraxinus cuspidata',
'Fraxinus greggii', 'Fraxinus nigra', 'Fraxinus pennsylvanica',
'Fraxinus profunda', 'Fraxinus quadrangulata')
# set constants
climYears <- seq(21000, 0, by=-1000)
studyRegionFileName <- './data_and_analyses/study_region/regions/study_region_daltonIceMask_lakesMasked_linearIceSheetInterpolation.tif'
studyRegionRasts <- brick(studyRegionFileName)
predictions <- function(speciesAb_, pc) {
predictors <<- c(paste0('pca', 1:pc))
for (climYear in climYears) {
climate <<- getClimRasts(pc = 5, climYear = climYear)
# plot(climate[[1]], main = paste0(climYear, ' ybp'))
climate <<- climate[[predictors]]
thisPred <<- predict(climate, envModel, clamp = F, type='cloglog')
# plot(thisPred, main = paste0("prediction at ", climYear, " ybp"))
names(thisPred) <<- (paste0(climYear, ' ybp'))
preds <<- if (exists('preds')) {
stack(preds, thisPred)
} else {
thisPred
}
return(preds)
}
getClimRasts <- function(pc, climYear) {
if (gcm == 'Beyer') { # Beyer
load('./data_and_analyses/env_data/Beyer/PCA_clim.Rdata')
load(paste0('./data_and_analyses/env_data/Beyer/pca_pc', pc, '.Rdata'))
fileName <- paste0('./data_and_analyses/env_data/Beyer/envDataClipped_',
climYear, 'YBP_pc', pc, '.tif')
vars <- c("BIO1", paste0('BIO', 4:19), "cloudiness", "relative_humidity")
} else if (gcm == 'Lorenz_ccsm') { # CCSM
load(paste0('./data_and_analyses/env_data/Lorenz/PCA_', gcm, '_clim.Rdata'))
load(paste0('./data_and_analyses/env_data/Lorenz/V2/ccsm_21-0k_all_tifs_LJ/pca_pc', pc, '.Rdata'))
fileName <- paste0('./data_and_analyses/env_data/Lorenz/V2/ccsm_21-0k_all_tifs_LJ/envDataClipped_',
climYear, 'YBP_pc', pc, '.tif')
clim <- lorenz
workingFolder <- paste0('./data_and_analyses/env_data/Lorenz/V2/ccsm_21-0k_all_tifs_LJ/',
climYear, 'BP')
vars <- names(clim[[1]])
} else { # ECBilt
load(paste0('./data_and_analyses/env_data/Lorenz/PCA_', gcm, '_clim.Rdata'))
load(paste0('./data_and_analyses/env_data/Lorenz/V2/ecbilt_21-0k_all_tifs_LJ/pca_pc', pc, '.Rdata'))
fileName <- paste0('./data_and_analyses/env_data/Lorenz/V2/ecbilt_21-0k_all_tifs_LJ/envDataClipped_',
climYear, 'YBP_pc', pc, '.tif')
clim <- lorenz
workingFolder <- paste0('./data_and_analyses/env_data/Lorenz/V2/',
gcm, '_21-0k_all_tifs_LJ/', climYear, 'BP')
vars <- names(clim[[1]])
}
if (file.exists(fileName)) {
envData <- brick(fileName)
# rename raster layers to pc's
names(envData) <- paste0('pca', 1:pc)
} else {
pcPrediction <<- list()
# label each env layer by variable and year
for (i in 1:length(clim)) {
names(clim[[i]]) <- vars
pcPrediction[i] <- raster::predict(clim[[i]], pca, index = 1:pc)
names(pcPrediction[[i]]) <- paste0("pc", 1:pc, "_", (i-1)*1000, "KYBP")
}
envDataPca <- stack(pcPrediction)
# keep only rasters (first five rasters) for climate year
envYr <- pcPrediction[[(climYear/1000) + 1]]
# plot(envYr)
names(envYr) <- paste0('pca', 1:pc)
# check projections = wgs84
print("Ensure that the projection of these rasters is WGS84:")
print(paste0("Projection of envYr = ", projection(envYr)))
# clip environmental PCAs to study extent for given species, visualize, and save:
envDataClipped <- list()
for (n in 1:nlayers(envYr)) {
x <- envYr[[n]]
x <- crop(x, extent(studyRegionRasts[[yrs[(climYear/1000) + 1]]]))
# x <<- mask(x, studyRegion)
projection(x) <- getCRS("WGS84")
envDataClipped[[n]] <- x
}
envData <- stack(envDataClipped)
plot(envData)
writeRaster(envData, fileName, format = 'GTiff', overwrite = T)
}
return(envData)
}
predictions <- function(speciesAb_, pc) {
predictors <<- c(paste0('pca', 1:pc))
for (climYear in climYears) {
climate <<- getClimRasts(pc = 5, climYear = climYear)
# plot(climate[[1]], main = paste0(climYear, ' ybp'))
climate <<- climate[[predictors]]
thisPred <<- predict(climate, envModel, clamp = F, type='cloglog')
# plot(thisPred, main = paste0("prediction at ", climYear, " ybp"))
names(thisPred) <<- (paste0(climYear, ' ybp'))
preds <<- if (exists('preds')) {
stack(preds, thisPred)
} else {
thisPred
}
return(preds)
}
for(sp in speciesList) {
species <- gsub(tolower(sp), pattern =' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
fileName <- list.files(path = paste0('./Models/Maxent/', speciesAb_, '_Maxent'),
pattern = paste0(gcm, '.Rdata'),
full.names = T)
load(fileName)
if(exists('preds')) rm(preds)
preds <- predictions(speciesAb_, pc)
# project
preds <- projectRaster(preds, studyRegionRasts)
# mask by study region and force values to be within [0, 1]
# (can get pushed outside this during re-projection)
preds <- raster::calc(preds, fun = function(x) ifelse(x < 0, 0, x))
preds <- raster::calc(preds, fun = function(x) ifelse(x > 1, 1, x))
for (i in 1:nlayers(preds)) {
landMask <- (1 - studyRegionRasts[[i]])
preds[[i]] <- preds[[i]] * landMask
}
# names(preds) <- paste0('ybp', seq(21000, 0, by=-1000))
writeRaster(stack(preds), paste0('./predictions/', gcm, '/', speciesAb_, '_GCM_', gcm, '_PC', pc),
format = 'GTiff', overwrite = T)
}
paste0('./Models/Maxent/', speciesAb_, '_Maxent')
fileName <- list.files(path = paste0('./Models/Maxent/', speciesAb_, '_Maxent/'),
pattern = paste0(gcm, '.Rdata'),
full.names = T)
fileName <- list.files(path = paste0('./Models/Maxent/', speciesAb_, '_Maxent/'),
pattern = paste0(gcm, '.rData'),
full.names = T)
for(sp in speciesList) {
species <- gsub(tolower(sp), pattern =' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
fileName <- list.files(path = paste0('./Models/Maxent/', speciesAb_, '_Maxent/'),
pattern = paste0(gcm, '.rData'),
full.names = T)
load(fileName)
if(exists('preds')) rm(preds)
preds <- predictions(speciesAb_, pc)
# project
preds <- projectRaster(preds, studyRegionRasts)
# mask by study region and force values to be within [0, 1]
# (can get pushed outside this during re-projection)
preds <- raster::calc(preds, fun = function(x) ifelse(x < 0, 0, x))
preds <- raster::calc(preds, fun = function(x) ifelse(x > 1, 1, x))
for (i in 1:nlayers(preds)) {
landMask <- (1 - studyRegionRasts[[i]])
preds[[i]] <- preds[[i]] * landMask
}
# names(preds) <- paste0('ybp', seq(21000, 0, by=-1000))
writeRaster(stack(preds), paste0('./predictions/', gcm, '/', speciesAb_, '_GCM_', gcm, '_PC', pc),
format = 'GTiff', overwrite = T)
}
rm(list = ls())
library(dplyr)
library(ggplot2)
library(tidyr)
library(raster)
library(rgdal)
library(enmSdm)
library(terra)
library(maxnet)
library(sf)
library(maps)
library(rnaturalearth)
library(rnaturalearthdata)
library(rnaturalearthhires)
setwd('/Volumes/lj_mac_22/MOBOT/PVMvsENM')
# constants
gcm <- 'ecbilt'
pc <- 5
# load(paste0('./workspaces/06 - ', gcm, ' Projections'))
# load(paste0('./workspaces/PCA_', gcm, '_PC', pc))
speciesList <- c('Fraxinus americana','Fraxinus caroliniana', 'Fraxinus cuspidata',
'Fraxinus greggii', 'Fraxinus nigra', 'Fraxinus pennsylvanica',
'Fraxinus profunda', 'Fraxinus quadrangulata')
# set constants
climYears <- seq(21000, 0, by=-1000)
studyRegionFileName <- './data_and_analyses/study_region/regions/study_region_daltonIceMask_lakesMasked_linearIceSheetInterpolation.tif'
studyRegionRasts <- brick(studyRegionFileName)
getClimRasts <- function(pc, climYear) {
if (gcm == 'Beyer') { # Beyer
load('./data_and_analyses/env_data/Beyer/PCA_clim.Rdata')
load(paste0('./data_and_analyses/env_data/Beyer/pca_pc', pc, '.Rdata'))
fileName <- paste0('./data_and_analyses/env_data/Beyer/envDataClipped_',
climYear, 'YBP_pc', pc, '.tif')
vars <- c("BIO1", paste0('BIO', 4:19), "cloudiness", "relative_humidity")
} else if (gcm == 'Lorenz_ccsm') { # CCSM
load(paste0('./data_and_analyses/env_data/Lorenz/PCA_', gcm, '_clim.Rdata'))
load(paste0('./data_and_analyses/env_data/Lorenz/V2/ccsm_21-0k_all_tifs_LJ/pca_pc', pc, '.Rdata'))
fileName <- paste0('./data_and_analyses/env_data/Lorenz/V2/ccsm_21-0k_all_tifs_LJ/envDataClipped_',
climYear, 'YBP_pc', pc, '.tif')
clim <- lorenz
workingFolder <- paste0('./data_and_analyses/env_data/Lorenz/V2/ccsm_21-0k_all_tifs_LJ/',
climYear, 'BP')
vars <- names(clim[[1]])
} else { # ECBilt
load(paste0('./data_and_analyses/env_data/Lorenz/PCA_', gcm, '_clim.Rdata'))
load(paste0('./data_and_analyses/env_data/Lorenz/V2/ecbilt_21-0k_all_tifs_LJ/pca_pc', pc, '.Rdata'))
fileName <- paste0('./data_and_analyses/env_data/Lorenz/V2/ecbilt_21-0k_all_tifs_LJ/envDataClipped_',
climYear, 'YBP_pc', pc, '.tif')
clim <- lorenz
workingFolder <- paste0('./data_and_analyses/env_data/Lorenz/V2/',
gcm, '_21-0k_all_tifs_LJ/', climYear, 'BP')
vars <- names(clim[[1]])
}
if (file.exists(fileName)) {
envData <- brick(fileName)
# rename raster layers to pc's
names(envData) <- paste0('pca', 1:pc)
} else {
pcPrediction <<- list()
# label each env layer by variable and year
for (i in 1:length(clim)) {
names(clim[[i]]) <- vars
pcPrediction[i] <- raster::predict(clim[[i]], pca, index = 1:pc)
names(pcPrediction[[i]]) <- paste0("pc", 1:pc, "_", (i-1)*1000, "KYBP")
}
envDataPca <- stack(pcPrediction)
# keep only rasters (first five rasters) for climate year
envYr <- pcPrediction[[(climYear/1000) + 1]]
# plot(envYr)
names(envYr) <- paste0('pca', 1:pc)
# check projections = wgs84
print("Ensure that the projection of these rasters is WGS84:")
print(paste0("Projection of envYr = ", projection(envYr)))
# clip environmental PCAs to study extent for given species, visualize, and save:
envDataClipped <- list()
for (n in 1:nlayers(envYr)) {
x <- envYr[[n]]
x <- crop(x, extent(studyRegionRasts[[yrs[(climYear/1000) + 1]]]))
# x <<- mask(x, studyRegion)
projection(x) <- getCRS("WGS84")
envDataClipped[[n]] <- x
}
envData <- stack(envDataClipped)
plot(envData)
writeRaster(envData, fileName, format = 'GTiff', overwrite = T)
}
return(envData)
}
predictions <- function(speciesAb_, pc) {
predictors <<- c(paste0('pca', 1:pc))
for (climYear in climYears) {
climate <<- getClimRasts(pc = 5, climYear = climYear)
# plot(climate[[1]], main = paste0(climYear, ' ybp'))
climate <<- climate[[predictors]]
thisPred <<- predict(climate, envModel, clamp = F, type='cloglog')
# plot(thisPred, main = paste0("prediction at ", climYear, " ybp"))
names(thisPred) <<- (paste0(climYear, ' ybp'))
preds <<- if (exists('preds')) {
stack(preds, thisPred)
} else {
thisPred
}
return(preds)
}
for(sp in speciesList) {
species <- gsub(tolower(sp), pattern =' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
fileName <- list.files(path = paste0('./Models/Maxent/', speciesAb_, '_Maxent/'),
pattern = paste0(gcm, '.rData'),
full.names = T)
load(fileName)
if(exists('preds')) rm(preds)
preds <- predictions(speciesAb_, pc)
# project
preds <- projectRaster(preds, studyRegionRasts)
# mask by study region and force values to be within [0, 1]
# (can get pushed outside this during re-projection)
preds <- raster::calc(preds, fun = function(x) ifelse(x < 0, 0, x))
preds <- raster::calc(preds, fun = function(x) ifelse(x > 1, 1, x))
for (i in 1:nlayers(preds)) {
landMask <- (1 - studyRegionRasts[[i]])
preds[[i]] <- preds[[i]] * landMask
}
# names(preds) <- paste0('ybp', seq(21000, 0, by=-1000))
writeRaster(stack(preds), paste0('./predictions/', gcm, '/', speciesAb_, '_GCM_', gcm, '_PC', pc),
format = 'GTiff', overwrite = T)
}
rm(list = ls())
library(dplyr)
library(ggplot2)
library(tidyr)
library(raster)
library(rgdal)
library(enmSdm)
library(terra)
library(maxnet)
library(sf)
library(maps)
library(rnaturalearth)
library(rnaturalearthdata)
library(rnaturalearthhires)
setwd('/Volumes/lj_mac_22/MOBOT/PVMvsENM')
# constants
gcm <- 'Beyer'
pc <- 5
# load(paste0('./workspaces/06 - ', gcm, ' Projections'))
# load(paste0('./workspaces/PCA_', gcm, '_PC', pc))
speciesList <- c('Fraxinus americana','Fraxinus caroliniana', 'Fraxinus cuspidata',
'Fraxinus greggii', 'Fraxinus nigra', 'Fraxinus pennsylvanica',
'Fraxinus profunda', 'Fraxinus quadrangulata')
# set constants
climYears <- seq(21000, 0, by=-1000)
studyRegionFileName <- './data_and_analyses/study_region/regions/study_region_daltonIceMask_lakesMasked_linearIceSheetInterpolation.tif'
studyRegionRasts <- brick(studyRegionFileName)
getClimRasts <- function(pc, climYear) {
if (gcm == 'Beyer') { # Beyer
load('./data_and_analyses/env_data/Beyer/PCA_clim.Rdata')
load(paste0('./data_and_analyses/env_data/Beyer/pca_pc', pc, '.Rdata'))
fileName <- paste0('./data_and_analyses/env_data/Beyer/envDataClipped_',
climYear, 'YBP_pc', pc, '.tif')
vars <- c("BIO1", paste0('BIO', 4:19), "cloudiness", "relative_humidity")
} else if (gcm == 'Lorenz_ccsm') { # CCSM
load(paste0('./data_and_analyses/env_data/Lorenz/PCA_', gcm, '_clim.Rdata'))
load(paste0('./data_and_analyses/env_data/Lorenz/V2/ccsm_21-0k_all_tifs_LJ/pca_pc', pc, '.Rdata'))
fileName <- paste0('./data_and_analyses/env_data/Lorenz/V2/ccsm_21-0k_all_tifs_LJ/envDataClipped_',
climYear, 'YBP_pc', pc, '.tif')
clim <- lorenz
workingFolder <- paste0('./data_and_analyses/env_data/Lorenz/V2/ccsm_21-0k_all_tifs_LJ/',
climYear, 'BP')
vars <- names(clim[[1]])
} else { # ECBilt
load(paste0('./data_and_analyses/env_data/Lorenz/PCA_', gcm, '_clim.Rdata'))
load(paste0('./data_and_analyses/env_data/Lorenz/V2/ecbilt_21-0k_all_tifs_LJ/pca_pc', pc, '.Rdata'))
fileName <- paste0('./data_and_analyses/env_data/Lorenz/V2/ecbilt_21-0k_all_tifs_LJ/envDataClipped_',
climYear, 'YBP_pc', pc, '.tif')
clim <- lorenz
workingFolder <- paste0('./data_and_analyses/env_data/Lorenz/V2/',
gcm, '_21-0k_all_tifs_LJ/', climYear, 'BP')
vars <- names(clim[[1]])
}
if (file.exists(fileName)) {
envData <- brick(fileName)
# rename raster layers to pc's
names(envData) <- paste0('pca', 1:pc)
} else {
pcPrediction <<- list()
# label each env layer by variable and year
for (i in 1:length(clim)) {
names(clim[[i]]) <- vars
pcPrediction[i] <- raster::predict(clim[[i]], pca, index = 1:pc)
names(pcPrediction[[i]]) <- paste0("pc", 1:pc, "_", (i-1)*1000, "KYBP")
}
envDataPca <- stack(pcPrediction)
# keep only rasters (first five rasters) for climate year
envYr <- pcPrediction[[(climYear/1000) + 1]]
# plot(envYr)
names(envYr) <- paste0('pca', 1:pc)
# check projections = wgs84
print("Ensure that the projection of these rasters is WGS84:")
print(paste0("Projection of envYr = ", projection(envYr)))
# clip environmental PCAs to study extent for given species, visualize, and save:
envDataClipped <- list()
for (n in 1:nlayers(envYr)) {
x <- envYr[[n]]
x <- crop(x, extent(studyRegionRasts[[yrs[(climYear/1000) + 1]]]))
# x <<- mask(x, studyRegion)
projection(x) <- getCRS("WGS84")
envDataClipped[[n]] <- x
}
envData <- stack(envDataClipped)
plot(envData)
writeRaster(envData, fileName, format = 'GTiff', overwrite = T)
}
return(envData)
}
predictions <- function(speciesAb_, pc) {
predictors <<- c(paste0('pca', 1:pc))
for (climYear in climYears) {
climate <<- getClimRasts(pc = 5, climYear = climYear)
# plot(climate[[1]], main = paste0(climYear, ' ybp'))
climate <<- climate[[predictors]]
thisPred <<- predict(climate, envModel, clamp = F, type='cloglog')
# plot(thisPred, main = paste0("prediction at ", climYear, " ybp"))
names(thisPred) <<- (paste0(climYear, ' ybp'))
preds <<- if (exists('preds')) {
stack(preds, thisPred)
} else {
thisPred
}
return(preds)
}
for(sp in speciesList) {
species <- gsub(tolower(sp), pattern =' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
fileName <- list.files(path = paste0('./Models/Maxent/', speciesAb_, '_Maxent/'),
pattern = paste0(gcm, '.rData'),
full.names = T)
load(fileName)
if(exists('preds')) rm(preds)
preds <- predictions(speciesAb_, pc)
# project
preds <- projectRaster(preds, studyRegionRasts)
# mask by study region and force values to be within [0, 1]
# (can get pushed outside this during re-projection)
preds <- raster::calc(preds, fun = function(x) ifelse(x < 0, 0, x))
preds <- raster::calc(preds, fun = function(x) ifelse(x > 1, 1, x))
for (i in 1:nlayers(preds)) {
landMask <- (1 - studyRegionRasts[[i]])
preds[[i]] <- preds[[i]] * landMask
}
# names(preds) <- paste0('ybp', seq(21000, 0, by=-1000))
writeRaster(stack(preds), paste0('./predictions/', gcm, '/', speciesAb_, '_GCM_', gcm, '_PC', pc),
format = 'GTiff', overwrite = T)
}
