''
list.files('./data_and_analyses/env_data/Beyer/tifs/relative_humidity', pattern = paste0(1000, "ybp.tif"), full.names=TRUE)
climYears <- paste0(seq(1000, 21000, by=1000), "ybp")
envList <- list()
envYears <- function(yr) {
return(unlist(sapply(folders, function(folder) {
paste0('./', list.files(folder, pattern = paste0(yr, ".tif"), full.names=TRUE))
})))
}
envList <- append(lapply(climYears, envYears))
envList <- append(envList, lapply(climYears, envYears))
View(envList)
climYears <- seq(1000, 21000, by=1000)
envList <- list()
envYears <- function(yr) {
return(unlist(sapply(folders, function(folder) {
paste0('./', list.files(folder, pattern = paste0("_", yr, "ybp.tif"), full.names=TRUE))
})))
}
envList <- append(envList, lapply(climYears, envYears))
View(envList)
PredictEnv(studylayers = TSEnv$study,
futurelayers = envList,
time_periods = c(0, climYears),
output = envoutput,
scenario_name = "Beyer")
prediction <- PredictEnv(studylayers = TSEnv$study,
futurelayers = envList,
time_periods = c(0, climYears),
output = envoutput,
scenario_name = "Beyer")
recordsRaw <- paste0('./cleaning_records/', fraxinus_quadrangulata, '_finalRecords.rData')
load(recordsRaw)
recordsRaw <- paste0('./cleaning_records/', 'fraxinus_quadrangulata', '_finalRecords.rData')
load(recordsRaw)
occs <- OccurrenceManagement(occlist = speciesSf_filtered_final,
output = occ_output,
envextract = TRUE,
envsample = TRUE,
nbins = 25,
envdata = TSEnv$training)
occ_output <- "occurrences"
occs <- OccurrenceManagement(occlist = speciesSf_filtered_final,
output = occ_output,
envextract = TRUE,
envsample = TRUE,
nbins = 25,
envdata = TSEnv$training)
recordsRaw <- data.frame(speciesSf_filtered_final)
recordsRaw$geometry <- gsub("[c()]", "", recordsRaw$geometry)
recordsRaw <- separate(data = recordsRaw,
col = 'geometry',
into = ll,
sep = "\\,")
recordsRaw$longitude <- as.double(recordsRaw$longitude)
recordsRaw$latitude <- as.double(recordsRaw$latitude)
recordsRaw <- paste0('./cleaning_records/', 'fraxinus_quadrangulata', '_finalRecords.rData')
load(recordsRaw)
recordsRaw <- data.frame(speciesSf_filtered_final)
recordsRaw$geometry <- gsub("[c()]", "", recordsRaw$geometry)
recordsRaw <- separate(data = recordsRaw,
col = 'geometry',
into = ll,
sep = "\\,")
ll <- c('longitude', 'latitude')
recordsRaw <- separate(data = recordsRaw,
col = 'geometry',
into = ll,
sep = "\\,")
recordsRaw$longitude <- as.double(recordsRaw$longitude)
recordsRaw$latitude <- as.double(recordsRaw$latitude)
occ_output <- "occurrences"
occs <- OccurrenceManagement(occlist = recordsRaw,
output = occ_output,
envextract = TRUE,
envsample = TRUE,
nbins = 25,
envdata = TSEnv$training)
write.csv(recordsRaw, paste0('./megaSDM_TestRun/', 'Frax_Quad.csv', row.names = T))
fileName <- paste0('./megaSDM_TestRun/', 'Frax_Quad.csv')
write.csv(recordsRaw, fileName, row.names = T)
occ_output <- "occurrences"
occs <- OccurrenceManagement(occlist = fileName,
output = occ_output,
envextract = TRUE,
envsample = TRUE,
nbins = 25,
envdata = TSEnv$training)
TSEnv$training
buff_output <- "megaSDM_TestRun/buffers"
BackgroundBuffers(occlist = fileName,
envdata = TSEnv$training,
buff_output,
ncores = 2)
BackgroundBuffers(occlist = list(fileName),
envdata = TSEnv$training,
buff_output,
ncores = 2)
speciesList <- c('Fraxinus americana', 'Fraxinus caroliniana', 'Fraxinus cuspidata'
,'Fraxinus greggii', 'Fraxinus nigra', 'Fraxinus pennsylvanica',
'Fraxinus profunda', 'Fraxinus quadrangulata')
toCSV <- function(sp) {
species <- gsub(tolower(sp), pattern=' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
recordsRaw <- paste0('./cleaning_records/', species, '_finalRecords.rData')
load(recordsRaw)
recordsRaw <- data.frame(speciesSf_filtered_final)
recordsRaw$geometry <- gsub("[c()]", "", recordsRaw$geometry)
recordsRaw <- separate(data = recordsRaw,
col = 'geometry',
into = ll,
sep = "\\,")
recordsRaw$longitude <- as.double(recordsRaw$longitude)
recordsRaw$latitude <- as.double(recordsRaw$latitude)
fileName <- paste0('./megaSDM_TestRun/', speciesAb_, '.csv')
write.csv(recordsRaw, fileName, row.names = T)
}
lapply(speciesList, toCSV)
occlist <- list.files('./megaSDM_TestRun/', pattern = '.csv', full.names = T)
occlist <- list.files('./megaSDM_TestRun', pattern = '.csv', full.names = T)
occ_output <- "occurrences"
OccurrenceManagement(occlist = occlist,
output = occ_output,
envextract = TRUE,
envsample = TRUE,
nbins = 25,
envdata = TSEnv$training)
splist <- c("Fraxnius americana", "Fraxinus pennsylvanica")
occ_output <- "occurrences"
extent_occ <- c(-178.2166, 83.7759, -55.90223, 83.6236)
Occurrences <- OccurrenceCollection(spplist = spplist,
output = occ_output,
trainingarea = extent_occ)
Occurrences <- OccurrenceCollection(spplist = splist,
output = occ_output,
trainingarea = extent_occ)
splist <- Occurrences$Scientific.Name
toCSV <- function(sp) {
species <- gsub(tolower(sp), pattern=' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
recordsRaw <- paste0('./cleaning_records/', species, '_finalRecords.rData')
load(recordsRaw)
recordsRaw <- data.frame(speciesSf_filtered_final)
recordsRaw$geometry <- gsub("[c()]", "", recordsRaw$geometry)
recordsRaw <- separate(data = recordsRaw,
col = 'geometry',
into = c('decimalLongitude', 'decimalLatitude'),
sep = "\\,")
recordsRaw$decimalLongitude <- as.double(recordsRaw$decimalLongitude)
recordsRaw$decimalLatitude <- as.double(recordsRaw$decimalLatitude)
fileName <- paste0('./megaSDM_TestRun/', speciesAb_, '.csv')
write.csv(recordsRaw, fileName, row.names = T)
}
lapply(speciesList, toCSV)
occlist <- list.files('./megaSDM_TestRun', pattern = '.csv', full.names = T)
occ_output <- "./megaSDM_TestRun/occurrences"
OccurrenceManagement(occlist = occlist,
output = occ_output,
envextract = TRUE,
envsample = TRUE,
nbins = 25,
envdata = TSEnv$training)
toCSV <- function(sp) {
species <- gsub(tolower(sp), pattern=' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
recordsRaw <- paste0('./cleaning_records/', species, '_finalRecords.rData')
load(recordsRaw)
recordsRaw <- data.frame(speciesSf_filtered_final)
recordsRaw$geometry <- gsub("[c()]", "", recordsRaw$geometry)
recordsRaw <- separate(data = recordsRaw,
col = 'geometry',
into = c('decimalLongitude', 'decimalLatitude'),
sep = "\\,")
recordsRaw$decimalLongitude <- as.double(recordsRaw$decimalLongitude)
recordsRaw$decimalLatitude <- as.double(recordsRaw$decimalLatitude)
recordsRaw <- recordsRaw[,c(1:4,23,24,5:22,25,26)]
fileName <- paste0('./megaSDM_TestRun/', speciesAb_, '.csv')
write.csv(recordsRaw, fileName, row.names = T)
}
lapply(speciesList, toCSV)
toCSV <- function(sp) {
species <- gsub(tolower(sp), pattern=' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
recordsRaw <- paste0('./cleaning_records/', species, '_finalRecords.rData')
load(recordsRaw)
recordsRaw <- data.frame(speciesSf_filtered_final)
recordsRaw$geometry <- gsub("[c()]", "", recordsRaw$geometry)
recordsRaw <- separate(data = recordsRaw,
col = 'geometry',
into = c('decimalLongitude', 'decimalLatitude'),
sep = "\\,")
recordsRaw$decimalLongitude <- as.double(recordsRaw$decimalLongitude)
recordsRaw$decimalLatitude <- as.double(recordsRaw$decimalLatitude)
recordsRaw <- recordsRaw[,c(1:3,23,24,4:22,25,26)]
fileName <- paste0('./megaSDM_TestRun/', speciesAb_, '.csv')
write.csv(recordsRaw, fileName, row.names = T)
}
lapply(speciesList, toCSV)
toCSV <- function(sp) {
species <- gsub(tolower(sp), pattern=' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
recordsRaw <- paste0('./cleaning_records/', species, '_finalRecords.rData')
load(recordsRaw)
recordsRaw <- data.frame(speciesSf_filtered_final)
recordsRaw$geometry <- gsub("[c()]", "", recordsRaw$geometry)
recordsRaw <- separate(data = recordsRaw,
col = 'geometry',
into = c('decimalLongitude', 'decimalLatitude'),
sep = "\\,")
recordsRaw$decimalLongitude <- as.double(recordsRaw$decimalLongitude)
recordsRaw$decimalLatitude <- as.double(recordsRaw$decimalLatitude)
recordsRaw <- recordsRaw[,c(2:3,1,23,24,4:22,25,26)]
fileName <- paste0('./megaSDM_TestRun/', speciesAb_, '.csv')
write.csv(recordsRaw, fileName, row.names = T)
}
lapply(speciesList, toCSV)
toCSV <- function(sp) {
species <- gsub(tolower(sp), pattern=' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
recordsRaw <- paste0('./cleaning_records/', species, '_finalRecords.rData')
load(recordsRaw)
recordsRaw <- data.frame(speciesSf_filtered_final)
recordsRaw$geometry <- gsub("[c()]", "", recordsRaw$geometry)
recordsRaw <- separate(data = recordsRaw,
col = 'geometry',
into = c('decimalLongitude', 'decimalLatitude'),
sep = "\\,")
recordsRaw$decimalLongitude <- as.double(recordsRaw$decimalLongitude)
recordsRaw$decimalLatitude <- as.double(recordsRaw$decimalLatitude)
colnames(recordsRaw)['scrubbed_species_binomial'] <- 'species'
recordsRaw <- recordsRaw[,c(2:3,1,23,24,4:22,25,26)]
fileName <- paste0('./megaSDM_TestRun/', speciesAb_, '.csv')
write.csv(recordsRaw, fileName, row.names = T)
}
lapply(speciesList, toCSV)
recordsRaw
colnames(recordsRaw$scrubbed_species_binomial) <- 'species'
colnames(recordsRaw)[1] <- 'species'
View(recordsRaw)
toCSV <- function(sp) {
species <- gsub(tolower(sp), pattern=' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
recordsRaw <- paste0('./cleaning_records/', species, '_finalRecords.rData')
load(recordsRaw)
recordsRaw <- data.frame(speciesSf_filtered_final)
recordsRaw$geometry <- gsub("[c()]", "", recordsRaw$geometry)
recordsRaw <- separate(data = recordsRaw,
col = 'geometry',
into = c('decimalLongitude', 'decimalLatitude'),
sep = "\\,")
recordsRaw$decimalLongitude <- as.double(recordsRaw$decimalLongitude)
recordsRaw$decimalLatitude <- as.double(recordsRaw$decimalLatitude)
colnames(recordsRaw)[1] <- 'species'
recordsRaw <- recordsRaw[,c(2:3,1,23,24,4:22,25,26)]
fileName <- paste0('./megaSDM_TestRun/', speciesAb_, '.csv')
write.csv(recordsRaw, fileName, row.names = T)
}
lapply(speciesList, toCSV)
occlist <- list.files('./megaSDM_TestRun', pattern = '.csv', full.names = T)
occ_output <- "./megaSDM_TestRun/occurrences"
OccurrenceManagement(occlist = occlist,
output = occ_output,
envextract = TRUE,
envsample = TRUE,
nbins = 25,
envdata = TSEnv$training)
occlist <- list.files('./megaSDM_TestRun', pattern = '.csv', full.names = T)
occocclist
occlist
OccurrenceManagement(occlist = occlist,
output = occ_output,
envextract = TRUE,
envsample = TRUE,
nbins = 25,
envdata = TSEnv$training)
toCSV <- function(sp) {
species <- gsub(tolower(sp), pattern=' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
recordsRaw <- paste0('./cleaning_records/', species, '_finalRecords.rData')
load(recordsRaw)
recordsRaw <- data.frame(speciesSf_filtered_final)
recordsRaw$geometry <- gsub("[c()]", "", recordsRaw$geometry)
recordsRaw <- separate(data = recordsRaw,
col = 'geometry',
into = ll,
sep = "\\,")
recordsRaw$decimalLongitude <- as.double(recordsRaw$decimalLongitude)
recordsRaw$decimalLatitude <- as.double(recordsRaw$decimalLatitude)
colnames(recordsRaw)[1] <- 'species'
recordsRaw <- recordsRaw[,c(2:3,1,23,24,4:22,25,26)]
fileName <- paste0('./megaSDM_TestRun/', speciesAb_, '.csv')
write.csv(recordsRaw, fileName, row.names = T)
}
lapply(speciesList, toCSV)
occlist <- list.files('./megaSDM_TestRun', pattern = '.csv', full.names = T)
toCSV <- function(sp) {
species <- gsub(tolower(sp), pattern=' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
recordsRaw <- paste0('./cleaning_records/', species, '_finalRecords.rData')
load(recordsRaw)
recordsRaw <- data.frame(speciesSf_filtered_final)
recordsRaw$geometry <- gsub("[c()]", "", recordsRaw$geometry)
recordsRaw <- separate(data = recordsRaw,
col = 'geometry',
into = ll,
sep = "\\,")
recordsRaw$decimalLongitude <- as.double(recordsRaw$decimalLongitude)
recordsRaw$decimalLatitude <- as.double(recordsRaw$decimalLatitude)
colnames(recordsRaw)[1] <- 'species'
recordsRaw <- recordsRaw[,c(2:3,1,23,24,4:22,25,26)]
fileName <- paste0('./megaSDM_TestRun/', speciesAb_, '.csv')
write.csv(recordsRaw, fileName, row.names = T)
}
lapply(speciesList, toCSV)
toCSV <- function(sp) {
species <- gsub(tolower(sp), pattern=' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
recordsRaw <- paste0('./cleaning_records/', species, '_finalRecords.rData')
load(recordsRaw)
recordsRaw <- data.frame(speciesSf_filtered_final)
recordsRaw$geometry <- gsub("[c()]", "", recordsRaw$geometry)
recordsRaw <- separate(data = recordsRaw,
col = 'geometry',
into = ll,
sep = "\\,")
recordsRaw$longitude <- as.double(recordsRaw$longitude)
recordsRaw$latitude <- as.double(recordsRaw$latitude)
colnames(recordsRaw)[1] <- 'species'
recordsRaw <- recordsRaw[,c(2:3,1,23,24,4:22,25,26)]
fileName <- paste0('./megaSDM_TestRun/', speciesAb_, '.csv')
write.csv(recordsRaw, fileName, row.names = T)
}
lapply(speciesList, toCSV)
occlist <- list.files('./megaSDM_TestRun', pattern = '.csv', full.names = T)
occ_output <- "./megaSDM_TestRun/occurrences"
OccurrenceManagement(occlist = occlist,
output = occ_output,
envextract = TRUE,
envsample = TRUE,
nbins = 25,
envdata = TSEnv$training)
species <- 'fraxinus_pennsylvanica'
recordsRaw <- paste0('./cleaning_records/', species, '_finalRecords.rData')
load(recordsRaw)
View(speciesSf_filtered_final)
speciesSf_filtered_final
st_write(speciesSf_filtered_final, "./megaSDM_TestRun/out.csv", layer_options = "GEOMETRY=AS_XY")
library(sf)
st_write(speciesSf_filtered_final, "./megaSDM_TestRun/out.csv", layer_options = "GEOMETRY=AS_LatLong")
st_write(speciesSf_filtered_final, "./megaSDM_TestRun/out.csv", layer_options = "GEOMETRY=AS_LatLong", append = F)
toCSV <- function(sp) {
species <- gsub(tolower(sp), pattern=' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
recordsRaw <- paste0('./cleaning_records/', species, '_finalRecords.rData')
load(recordsRaw)
fileName <- paste0('./megaSDM_TestRun/', speciesAb_, '.csv')
st_write(speciesSf_filtered_final,
fileName,
layer_options = "GEOMETRY=AS_XY")
temp <- read.csv(fileName)
colnames(temp)[1:2] <- c('longitude', 'latitude')
}
lapply(speciesList, toCSV)
toCSV <- function(sp) {
species <- gsub(tolower(sp), pattern=' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
recordsRaw <- paste0('./cleaning_records/', species, '_finalRecords.rData')
load(recordsRaw)
fileName <- paste0('./megaSDM_TestRun/', speciesAb_, '.csv')
st_write(speciesSf_filtered_final,
fileName,
layer_options = "GEOMETRY=AS_XY",
append = F)
temp <- read.csv(fileName)
colnames(temp)[1:2] <- c('longitude', 'latitude')
}
lapply(speciesList, toCSV)
toCSV <- function(sp) {
species <- gsub(tolower(sp), pattern=' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
recordsRaw <- paste0('./cleaning_records/', species, '_finalRecords.rData')
load(recordsRaw)
fileName <- paste0('./megaSDM_TestRun/', speciesAb_, '.csv')
st_write(speciesSf_filtered_final,
fileName,
layer_options = "GEOMETRY=AS_XY",
append = F)
temp <- read.csv(fileName)
colnames(temp)[1:2] <- c('longitude', 'latitude')
}
lapply(speciesList, toCSV)
toCSV <- function(sp) {
species <- gsub(tolower(sp), pattern=' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
recordsRaw <- paste0('./cleaning_records/', species, '_finalRecords.rData')
load(recordsRaw)
fileName <- paste0('./megaSDM_TestRun/', speciesAb_, '.csv')
st_write(speciesSf_filtered_final,
fileName,
layer_options = "GEOMETRY=AS_XY",
append = F)
temp <- read.csv(fileName)
colnames(temp)[1:2] <- c('longitude', 'latitude')
write.csv(temp, fileName)
}
lapply(speciesList, toCSV)
toCSV <- function(sp) {
species <- gsub(tolower(sp), pattern=' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
recordsRaw <- paste0('./cleaning_records/', species, '_finalRecords.rData')
load(recordsRaw)
fileName <- paste0('./megaSDM_TestRun/', speciesAb_, '.csv')
st_write(speciesSf_filtered_final,
fileName,
layer_options = "GEOMETRY=AS_XY",
append = F)
temp <- read.csv(fileName)
colnames(temp)[1:3] <- c('longitude', 'latitude', 'species')
write.csv(temp, fileName)
}
lapply(speciesList, toCSV)
occlist <- list.files('./megaSDM_TestRun', pattern = '.csv', full.names = T)
occ_output <- "./megaSDM_TestRun/occurrences"
OccurrenceManagement(occlist = occlist,
output = occ_output,
envextract = TRUE,
envsample = TRUE,
nbins = 25,
envdata = TSEnv$training)
toCSV <- function(sp) {
species <- gsub(tolower(sp), pattern=' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
recordsRaw <- paste0('./cleaning_records/', species, '_finalRecords.rData')
load(recordsRaw)
fileName <- paste0('./megaSDM_TestRun/', speciesAb_, '.csv')
st_write(speciesSf_filtered_final,
fileName,
layer_options = "GEOMETRY=AS_XY",
append = F)
temp <- read.csv(fileName)
colnames(temp)[1:3] <- c('longitude', 'latitude', 'species')
write.csv(temp, fileName)
}
lapply(speciesList, toCSV)
occlist <- list.files('./megaSDM_TestRun', pattern = '.csv', full.names = T)
occ_output <- "./megaSDM_TestRun/occurrences"
OccurrenceManagement(occlist = occlist,
output = occ_output,
envextract = TRUE,
envsample = TRUE,
nbins = 25,
envdata = TSEnv$training)
minLat <- list()
maxLat <- list()
minLong <- list()
maxLong <- list()
fileName <- paste0('./megaSDM_TestRun/', 'Frax_Penn', '.csv')
temp<-read.csv(fileName)
findMinMax <- function(sp) {
species <- gsub(tolower(sp), pattern=' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
fileName <- paste0('./megaSDM_TestRun/', speciesAb_, '.csv')
temp <- read.csv(fileName)
minLat <- append(minLat, min(temp$latitude))
maxLat <- append(maxLat, max(temp$latitude))
minLong <- append(minLong, min(temp$longitude))
maxLong <- append(maxLong, max(temp$longitude))
}
lapply(speciesList, findMinMax)
i <- 1
findMinMax <- function(sp) {
species <- gsub(tolower(sp), pattern=' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
fileName <- paste0('./megaSDM_TestRun/', speciesAb_, '.csv')
temp <- read.csv(fileName)
minLat[i] <- min(temp$latitude)
maxLat[i] <- max(temp$latitude)
minLong[i] <- min(temp$longitude)
maxLong[i] <- max(temp$longitude)
i <- i + 1
}
lapply(speciesList, findMinMax)
x <- list()
findMinMax <- function(sp) {
species <- gsub(tolower(sp), pattern=' ', replacement='_')
speciesAb <- paste0(substr(sp,1,4), toupper(substr(sp,10,10)), substr(sp,11,13))
speciesAb_ <- sub("(.{4})(.*)", "\\1_\\2", speciesAb)
fileName <- paste0('./megaSDM_TestRun/', speciesAb_, '.csv')
temp <- read.csv(fileName)
return(c(min(temp$latitude), max(temp$latitude), min(temp$longitude), max(temp$longitude)))
}
x <- append(lapply(speciesList, findMinMax))
x <- append(x, lapply(speciesList, findMinMax))
View(x)
